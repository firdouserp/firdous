[{"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\index.js":"1","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\App.js":"3","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\Dashboard.js":"4","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\units.js":"5","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\users.js":"6","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\projects.js":"7","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\MyAppBar.js":"8","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\notes.js":"9","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\coa_type.js":"10","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\coa.js":"11","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\custom\\customRoutes.js":"12","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\vouchers\\Transactions.js":"13","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\vouchers.js":"14","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\MyLoginForm.js":"15","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\booking.js":"16","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingFormWizard.js":"17","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\inventory\\stock.js":"18","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\custom\\CustomMenu.js":"19","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\payroll\\employees.js":"20","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\grn.js":"21","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\clients.js":"22","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\purchaseorders.js":"23","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\settings\\Fprop.js":"24","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\ProjectLedger.js":"25","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\ConsolidatedTrialBalance.js":"26","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\AccountsLedger.js":"27","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\TrialBalance.js":"28","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\settings\\setting.js":"29","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\suppliers.js":"30","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\providers\\basicAuth.js":"31","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\schedule.js":"32","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\FirdousSelect.js":"33","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\Logo.js":"34","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\Accounts.js":"35","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\PrintPOComponent.js":"36","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\charts\\DummyChart.js":"37","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\charts\\VouchersChart.js":"38","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingShow.js":"39","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\ScheduleForm.js":"40","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingConfirm.js":"41","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingDetailsForm.js":"42","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\POPrint.js":"43","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\VoucherShow.js":"44","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\Reports.js":"45","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\VoucherEntry3.js":"46","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\Accountbalances.js":"47","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\Purchases.js":"48","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\vouchers\\TransactionEntryForm.js":"49","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\sales\\Sales.js":"50","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingPrint.js":"51","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\PrintVoucherComponent.js":"52","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\VoucherPrint.js":"53"},{"size":517,"mtime":1632909177455,"results":"54","hashOfConfig":"55"},{"size":375,"mtime":1632909177456,"results":"56","hashOfConfig":"55"},{"size":13411,"mtime":1647202740387,"results":"57","hashOfConfig":"55"},{"size":775,"mtime":1632909177401,"results":"58","hashOfConfig":"55"},{"size":5312,"mtime":1632909177452,"results":"59","hashOfConfig":"55"},{"size":606,"mtime":1632909177452,"results":"60","hashOfConfig":"55"},{"size":5507,"mtime":1632909177433,"results":"61","hashOfConfig":"55"},{"size":1271,"mtime":1641815477104,"results":"62","hashOfConfig":"55"},{"size":3313,"mtime":1632909177415,"results":"63","hashOfConfig":"55"},{"size":2581,"mtime":1632909177414,"results":"64","hashOfConfig":"55"},{"size":4722,"mtime":1632909177413,"results":"65","hashOfConfig":"55"},{"size":1435,"mtime":1641831569634,"results":"66","hashOfConfig":"55"},{"size":7926,"mtime":1632909216506,"results":"67","hashOfConfig":"55"},{"size":7618,"mtime":1632909177415,"results":"68","hashOfConfig":"55"},{"size":4660,"mtime":1632909216501,"results":"69","hashOfConfig":"55"},{"size":17148,"mtime":1647338513873,"results":"70","hashOfConfig":"55"},{"size":4670,"mtime":1647117032298,"results":"71","hashOfConfig":"55"},{"size":5315,"mtime":1632909177431,"results":"72","hashOfConfig":"55"},{"size":3104,"mtime":1632909177429,"results":"73","hashOfConfig":"55"},{"size":5479,"mtime":1632909177432,"results":"74","hashOfConfig":"55"},{"size":10871,"mtime":1641918893327,"results":"75","hashOfConfig":"55"},{"size":6540,"mtime":1643135325022,"results":"76","hashOfConfig":"55"},{"size":14430,"mtime":1647100313840,"results":"77","hashOfConfig":"55"},{"size":3315,"mtime":1632909177450,"results":"78","hashOfConfig":"55"},{"size":15820,"mtime":1647102574608,"results":"79","hashOfConfig":"55"},{"size":13131,"mtime":1634910973000,"results":"80","hashOfConfig":"55"},{"size":10113,"mtime":1642674429860,"results":"81","hashOfConfig":"55"},{"size":14348,"mtime":1634910973002,"results":"82","hashOfConfig":"55"},{"size":3223,"mtime":1632909177451,"results":"83","hashOfConfig":"55"},{"size":7709,"mtime":1641897618145,"results":"84","hashOfConfig":"55"},{"size":1448,"mtime":1632909216508,"results":"85","hashOfConfig":"55"},{"size":18807,"mtime":1646752957815,"results":"86","hashOfConfig":"55"},{"size":1270,"mtime":1632909177404,"results":"87","hashOfConfig":"55"},{"size":311,"mtime":1632909177402,"results":"88","hashOfConfig":"55"},{"size":5063,"mtime":1632909177403,"results":"89","hashOfConfig":"55"},{"size":945,"mtime":1632909177435,"results":"90","hashOfConfig":"55"},{"size":1545,"mtime":1632909177427,"results":"91","hashOfConfig":"55"},{"size":1590,"mtime":1632909177428,"results":"92","hashOfConfig":"55"},{"size":3229,"mtime":1647100303526,"results":"93","hashOfConfig":"55"},{"size":2068,"mtime":1647337418375,"results":"94","hashOfConfig":"55"},{"size":9917,"mtime":1642686647588,"results":"95","hashOfConfig":"55"},{"size":9595,"mtime":1647101624119,"results":"96","hashOfConfig":"55"},{"size":11741,"mtime":1632909177434,"results":"97","hashOfConfig":"55"},{"size":1355,"mtime":1632909177412,"results":"98","hashOfConfig":"55"},{"size":2602,"mtime":1641831975660,"results":"99","hashOfConfig":"55"},{"size":15242,"mtime":1632909177409,"results":"100","hashOfConfig":"55"},{"size":4904,"mtime":1632909177445,"results":"101","hashOfConfig":"55"},{"size":2570,"mtime":1647202077264,"results":"102","hashOfConfig":"55"},{"size":14641,"mtime":1642688804670,"results":"103","hashOfConfig":"55"},{"size":2553,"mtime":1647202043702,"results":"104","hashOfConfig":"55"},{"size":10863,"mtime":1647338631531,"results":"105","hashOfConfig":"55"},{"size":962,"mtime":1632909216502,"results":"106","hashOfConfig":"55"},{"size":10658,"mtime":1646749979163,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"vje4ps",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"110"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"110"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"110"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"110"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\index.js",[],["240","241"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\App.js",["242","243","244","245","246"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\Dashboard.js",["247"],"import { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport * as React from \"react\";\r\nimport { Title } from 'react-admin';\r\nimport DummyChart from './charts/DummyChart';\r\nimport VouchersChart from './charts/VouchersChart';\r\n\r\n\r\nexport default () => (\r\n    <Card style={{ height: '100%' }}>\r\n        <Title title=\"Welcome to the Firdous ERP\" />\r\n        <CardContent>\r\n            <Grid container spacing={6}>\r\n                <Grid item xs={12} md={6}>\r\n                    <DummyChart />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <VouchersChart />\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n);","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\units.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\users.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\projects.js",["248","249","250"],"import { Grid, useMediaQuery } from '@material-ui/core';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport * as React from \"react\";\r\nimport { BooleanInput, Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, SearchInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar, useNotify, useRedirect, useRefresh } from 'react-admin';\r\n\r\nexport const ProjectIcon = ApartmentIcon;\r\n\r\nexport const ProjectActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\n\r\nconst ProjectSearchFilter = (props) => (\r\n\r\n  <Filter {...props}>\r\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n  </Filter>\r\n\r\n);\r\n\r\nexport const ProjectList = props => (\r\n  <List filters={<ProjectSearchFilter />} {...props}>\r\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={record => record.title}\r\n        secondaryText={record => `${record.code}`}\r\n        tertiaryText={record => record.id}\r\n\r\n      />\r\n    ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"code\" />\r\n          <TextField source=\"scode\" />\r\n          <TextField source=\"title\" />\r\n          <TextField source=\"location\" />\r\n          <TextField source=\"nature\" />\r\n          <TextField source=\"remarks\" />\r\n          <TextField source=\"active\" />\r\n          <EditButton variant=\"contained\" color=\"secondary\" />\r\n          <DeleteButton />\r\n        </Datagrid>)}\r\n  </List>\r\n);\r\n\r\nconst ProjectTitle = ({ record }) => {\r\n  return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const ProjectEdit = (props) => (\r\n  <Edit undoable={false} title={<ProjectTitle />} {...props}>\r\n\r\n    <SimpleForm\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"code\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"scode\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput multiline source=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"location\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"city\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"client\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"cost\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"country\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"nature\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"remarks\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <BooleanInput source=\"active\" fullWidth />\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </SimpleForm>\r\n\r\n  </Edit>\r\n);\r\n\r\nexport const ProjectCreate = (props) => {\r\n\r\n  const notify = useNotify();\r\n  const refresh = useRefresh();\r\n  const redirect = useRedirect();\r\n  const onFailure = (error) => {\r\n\r\n\r\n    notify(`Could not edit post: ${error}`)\r\n  };\r\n\r\n  return (\r\n    <Create title=\"New Project\" {...props}>\r\n      <SimpleForm\r\n        variant={\"standard\"}\r\n        sanitizeEmptyValues={false}\r\n        margin=\"none\"\r\n        fullWidth\r\n      >\r\n        <Grid container display=\"flex\" fullWidth spacing={1}>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput disabled source=\"id\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput  source=\"code\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"scode\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput multiline source=\"title\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"location\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"city\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"client\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"cost\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"country\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"nature\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <TextInput source=\"remarks\" fullWidth />\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <BooleanInput source=\"active\" fullWidth />\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </SimpleForm>\r\n    </Create>\r\n  )\r\n};","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\MyAppBar.js",["251"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Label } from \"@material-ui/icons\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport * as React from \"react\";\r\nimport { AppBar, MenuItemLink, UserMenu } from \"react-admin\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst MyUserMenu = (props) => (\r\n  <UserMenu {...props}>\r\n    <MenuItemLink\r\n      to=\"/configuration\"\r\n      primaryText=\"Configuration\"\r\n      leftIcon={<SettingsIcon />}\r\n    />\r\n  </UserMenu>\r\n);\r\nconst useStyles = makeStyles({\r\n  title: {\r\n    flex: 1,\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    paddingLeft: \"8px\",\r\n  },\r\n  spacer: {\r\n    flex: 0.13,\r\n  },\r\n});\r\n\r\nconst MyAppBar = (props) => {\r\n  const classes = useStyles();\r\n  const jwt = JSON.parse(localStorage.getItem(\"jwtToken\"));\r\n  return (\r\n    <AppBar {...props} userMenu={<MyUserMenu />} color=\"primary\">\r\n      <Logo />\r\n      {/* <span className={classes.spacer} /> */}\r\n      <Typography\r\n        variant=\"h6\"\r\n        color=\"inherit\"\r\n        className={classes.title}\r\n        id=\"react-admin-title\"\r\n      />\r\n      {jwt && jwt.project && jwt.project.title}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MyAppBar;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\notes.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\coa_type.js",["252","253"],"import { useMediaQuery } from '@material-ui/core';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\r\nimport * as React from \"react\";\r\nimport { Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, SearchInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar } from 'react-admin';\r\n\r\nexport const Coa_typeIcon = FormatListNumberedIcon;\r\n\r\nexport const Coa_typeActions = ({ basePath, data }) => (\r\n    <TopToolbar>\r\n        <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n        {/* <ShowButton basePath={basePath} record={data} /> */}\r\n    </TopToolbar>\r\n);\r\n\r\nconst Coa_typeSearchFilter = (props) => (\r\n\r\n    <Filter {...props}>\r\n        <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n        <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n        <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n    </Filter>\r\n\r\n);\r\n\r\nexport const Coa_typeList = props => (\r\n    <List filters={<Coa_typeSearchFilter />} {...props}>\r\n        {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n            <SimpleList\r\n                primaryText={record => record.title}\r\n                secondaryText={record => `${record.code}`}\r\n                tertiaryText={record => record.id}\r\n\r\n            />\r\n        ) : (\r\n                <Datagrid rowClick=\"edit\">\r\n                    <TextField source=\"id\" />\r\n                    <TextField source=\"code\" />\r\n                    <TextField source=\"title\" />\r\n                    <EditButton variant=\"contained\" color=\"secondary\" />\r\n                    <DeleteButton />\r\n                </Datagrid>)}\r\n    </List>\r\n);\r\n\r\nconst Coa_typeTitle = ({ record }) => {\r\n    return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const Coa_typeEdit = (props) => (\r\n    <Edit undoable={false}  title={<Coa_typeTitle />} {...props}>\r\n        <SimpleForm variant=\"standard\" margin=\"none\"    >\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"code\" />\r\n            <TextInput multiline source=\"title\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const Coa_typeCreate = (props) => (\r\n    <Create  title=\"New Coa_type\" {...props}>\r\n        <SimpleForm variant=\"standard\">\r\n            <TextInput disabled source=\"id\" />\r\n            <TextInput source=\"code\" />\r\n            <TextInput multiline source=\"title\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\coa.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\custom\\customRoutes.js",["254","255"],"import * as React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Accounts from \"../accounts/Accounts\";\r\nimport { InvalidVouchersList } from \"../accounts/vouchers\";\r\nimport Purchases from \"../purchases/Purchases\";\r\nimport AccountBalancePrintable from \"../reports/Accountbalances\";\r\nimport AccountsLedgerList from \"../reports/AccountsLedger\";\r\nimport ProjectLedgerPrintable from \"../reports/ProjectLedger\";\r\nimport Reports from \"../reports/Reports\";\r\nimport Sales from \"../sales/Sales\";\r\n\r\nexport default [\r\n  <Route exact path=\"/accounts\" component={Accounts} />,\r\n  <Route exact path=\"/purchases\" component={Purchases} />,\r\n  <Route exact path=\"/sales\" component={Sales} />,\r\n\r\n  <Route exact path=\"/reports\" component={Reports} />,\r\n  <Route exact path=\"/accountledger\" component={AccountsLedgerList} />,\r\n  <Route exact path=\"/projectledger\" component={ProjectLedgerPrintable} />,\r\n  <Route exact path=\"/trialbalance\" component={ProjectLedgerPrintable} />,\r\n  <Route exact path=\"/trialbalanceconsolidated\" component={ProjectLedgerPrintable} />,\r\n  <Route exact path=\"/invalidvou\" component={InvalidVouchersList} />,\r\n\r\n  //<Route exact path=\"/accounts/vouchers/create\" component={VoucherEntry} />,\r\n  //<Route exact path=\"/accounts/voucherentry/:id\" component={VoucherEdit} />,\r\n  //<Route exact path=\"/userform\" component={Userform} />,\r\n  //<Route exact path=\"/bookingform\" component={BookingFormWizard} />,\r\n];\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\vouchers\\Transactions.js",["256","257","258"],"import { Chip, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  DateInput,\r\n  Edit,\r\n  EditButton,\r\n  Filter,\r\n  List,\r\n  ListButton,\r\n  Pagination,\r\n  SearchInput,\r\n  SelectInput,\r\n  SimpleList,\r\n  TextField,\r\n  TopToolbar\r\n} from \"react-admin\";\r\nimport { useLocation } from \"react-router\";\r\nimport FirdousSelect from \"../FirdousSelect\";\r\nimport VoucherShow from \"../VoucherShow\";\r\nimport { TransactionEntryForm } from \"./TransactionEntryForm\";\r\n\r\nconst useStyles = makeStyles({\r\n  description:{maxWidth: \"600px\", float:\"left\"}\r\n});\r\n\r\nexport const useQuery = (queryParam) => {\r\n  const search = new URLSearchParams(useLocation().search);\r\n  return search.get(queryParam);\r\n};\r\n\r\nexport const TransactionsIcon = StoreIcon;\r\n\r\nexport const TransactionsActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\nconst vou_types = [\r\n  { id: 1, title: \"Journal Voucher\" },\r\n  { id: 2, title: \"Payment Voucher\" },\r\n  { id: 3, title: \"Reciept Voucher\" },\r\n  { id: 4, title: \"Sales Voucher\" },\r\n  { id: 5, title: \"Salary Voucher\" },\r\n  { id: 6, title: \"Inventory Voucher\" },\r\n];\r\n\r\nconst useQuickFilterStyles = makeStyles((theme) => ({\r\n  chip: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst QuickFilter = ({ label }) => {\r\n  const classes = useQuickFilterStyles();\r\n  return <Chip className={classes.chip} label={label} />;\r\n};\r\n\r\nconst TransactionsSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Voucher-No\"\r\n      source=\"vou_no\"\r\n      alwaysOn\r\n    />\r\n\r\n    <DateInput\r\n      variant=\"standard\"\r\n      placeholder=\"Voucher Date\"\r\n      source=\"vou_date\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Chq-No\"\r\n      source=\"chq_no\"\r\n      alwaysOn\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Vendor\"\r\n      source=\"supplier\"\r\n      optionText=\"title\"\r\n      list=\"suppliers\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Units\"\r\n      source=\"unit\"\r\n      optionText=\"title\"\r\n      list=\"units\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Stocks\"\r\n      source=\"stock\"\r\n      optionText=\"title\"\r\n      list=\"stock\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Employees\"\r\n      source=\"employee\"\r\n      optionText=\"title\"\r\n      list=\"employees\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <SelectInput\r\n      variant=\"standard\"\r\n      margin=\"none\"\r\n      label=\"Voucher Type\"\r\n      source=\"vou_type\"\r\n      optionText=\"title\"\r\n      optionValue=\"id\"\r\n      choices={vou_types}\r\n      fullWidth\r\n    />\r\n  </Filter>\r\n);\r\nconst PostPagination = (props) => (\r\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\r\n);\r\n\r\nconst TransactionList = ({ id, record, resource }) => {\r\n  console.log(JSON.stringify(record));\r\n  return (\r\n    <table align=\"center\" width=\"900px\" cellPadding=\"0\" cellSpacing=\"0\">\r\n      <tr>\r\n        <th>Account</th>\r\n        <th>Particulars</th>\r\n        <th>Debit</th>\r\n        <th>Credit</th>\r\n      </tr>\r\n      <tbody>\r\n        {record.transactions.map((t) => {\r\n          return (\r\n            <tr className=\"\">\r\n              <td width=\"200px\">{t.account}</td>\r\n              <td width=\"500px\">{t.particulars}</td>\r\n              <td width=\"100px\">{t.dr}</td>\r\n              <td width=\"100px\">{t.cr}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    // <div><span>{t.coa}</span><span>{t.description}</span> <span>{t.dr}</span> <span>{t.cr}</span></div>\r\n  );\r\n};\r\n\r\n\r\nexport const TransactionsList = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n  \r\n  <List\r\n    sort={{ field: \"row_id\", order: \"DESC\" }}\r\n    perPage={25}\r\n    pagination={<PostPagination />}\r\n    empty={false}\r\n    filters={<TransactionsSearchFilter />}\r\n    {...props}\r\n    undoable={false}\r\n  >\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n      <Datagrid  rowClick=\"edit\" expand={<TransactionList />}>\r\n        {/* <TextField source=\"row_id\" /> */}\r\n        <TextField source=\"vou_no\" />\r\n        <TextField source=\"vou_date\" />\r\n        {/* <ReferenceField label=\"Project\" source=\"project\" reference=\"Projects\">\r\n          <TextField source=\"title\" />\r\n        </ReferenceField> */}\r\n        <TextField  className={classes.description} source=\"description\" />\r\n\r\n        <TextField source=\"chq_no\" />\r\n        <TextField source=\"chq_date\" />\r\n        <TextField source=\"created_by\" />\r\n\r\n        {/* <FunctionField label=\"Amount\" render={record => parseFloat(record.transactions.reduce((t,sum=0) => sum=sum+ parseFloat(t.dr), 0))} /> */}\r\n        {/* <EditButton\r\n          label=\"\"\r\n          undoable={false}\r\n          // variant=\"contained\"\r\n          color=\"secondary\"\r\n        /> */}\r\n        {/* <DeleteButton /> */}\r\n      </Datagrid>\r\n    )}\r\n  </List>\r\n)}\r\n\r\nexport const InvalidTransactionsList = (props) => (\r\n  <List\r\n    sort={{ field: \"vou_no\", order: \"DESC\" }}\r\n    perPage={25}\r\n    pagination={<PostPagination />}\r\n    empty={false}\r\n    basePath=\"/vouchers\"\r\n    resource=\"vouchers/invalidvou\"\r\n    filters={<TransactionsSearchFilter />}\r\n    {...props}\r\n  >\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n      <Datagrid rowClick=\"edit\">\r\n        <TextField source=\"row_id\" />\r\n        <TextField source=\"vou_no\" />\r\n        <TextField source=\"vou_date\" />\r\n        {/* <ReferenceField label=\"Project\" source=\"project\" reference=\"Projects\">\r\n          <TextField source=\"title\" />\r\n        </ReferenceField> */}\r\n        <TextField source=\"debit\" />\r\n        <TextField source=\"credit\" />\r\n        <EditButton variant=\"standard\" color=\"secondary\" />\r\n        {/* <DeleteButton /> */}\r\n      </Datagrid>\r\n    )}\r\n  </List>\r\n);\r\n\r\nconst TransactionsTitle = ({ record }) => {\r\n  return <span>Voucher {record ? `\"${record.vou_no}\"` : \"\"}</span>;\r\n};\r\nexport const TransactionsEdit = (props) => {\r\n  return (\r\n    <Edit\r\n      undoable={false}\r\n      actions={null}\r\n      title={<TransactionsTitle />}\r\n      {...props}\r\n    >\r\n      <TransactionEntryForm {...props} />\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport const TransactionsCreate = (props) => {\r\n  const vou_type = useQuery(\"vou_type\");\r\n  return (\r\n    <Create undoable={false} title=\"New Voucher\" {...props}>\r\n      <TransactionEntryForm vou_type={vou_type} {...props} />\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport const TransactionsShow = (props) => {\r\n  return <VoucherShow {...props} />;\r\n};\r\n\r\nconst dateFormatter = (v) => {\r\n  // v is a `Date` object\r\n  if (!(v instanceof Date) || isNaN(v)) return;\r\n  const pad = \"00\";\r\n  const yy = v.getFullYear().toString();\r\n  const mm = (v.getMonth() + 1).toString();\r\n  const dd = v.getDate().toString();\r\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\n\r\nconst dateParser = (v) => {\r\n  // v is a string of \"YYYY-MM-DD\" format\r\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\r\n  if (match === null) return;\r\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\r\n  if (isNaN(d)) return;\r\n  return d;\r\n};\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\vouchers.js",["259","260","261"],"import { Chip, makeStyles, useMediaQuery } from \"@material-ui/core\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport * as React from \"react\";\r\nimport {\r\n  Create,\r\n  Datagrid,\r\n  DateInput,\r\n  Edit,\r\n  EditButton,\r\n  Filter,\r\n  List,\r\n  ListButton,\r\n  Pagination,\r\n  SearchInput,\r\n  SelectInput,\r\n  SimpleList,\r\n  TextField,\r\n  TopToolbar,\r\n} from \"react-admin\";\r\nimport { useLocation } from \"react-router\";\r\nimport FirdousSelect from \"./FirdousSelect\";\r\nimport { VoucherEntryForm } from \"./VoucherEntry3\";\r\nimport VoucherShow from \"./VoucherShow\";\r\nexport const useQuery = (queryParam) => {\r\n  const search = new URLSearchParams(useLocation().search);\r\n  return search.get(queryParam);\r\n};\r\n\r\nexport const VouchersIcon = StoreIcon;\r\n\r\nexport const VouchersActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\nconst vou_types = [\r\n  { id: 1, title: \"Journal Voucher\" },\r\n  { id: 2, title: \"Payment Voucher\" },\r\n  { id: 3, title: \"Reciept Voucher\" },\r\n  { id: 4, title: \"Sales Voucher\" },\r\n  { id: 5, title: \"Salary Voucher\" },\r\n  { id: 6, title: \"Inventory Voucher\" },\r\n];\r\n\r\nconst useQuickFilterStyles = makeStyles((theme) => ({\r\n  chip: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\nconst QuickFilter = ({ label }) => {\r\n  const classes = useQuickFilterStyles();\r\n  return <Chip className={classes.chip} label={label} />;\r\n};\r\n\r\nconst VouchersSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Voucher-No\"\r\n      source=\"vou_no\"\r\n      alwaysOn\r\n    />\r\n\r\n    <DateInput\r\n      variant=\"standard\"\r\n      placeholder=\"Voucher Date\"\r\n      source=\"vou_date\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Chq-No\"\r\n      source=\"chq_no\"\r\n      alwaysOn\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Project\"\r\n      source=\"project\"\r\n      optionText=\"title\"\r\n      list=\"projects\"\r\n      sort=\"title\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Vendor\"\r\n      source=\"supplier\"\r\n      optionText=\"title\"\r\n      list=\"suppliers\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Units\"\r\n      source=\"unit\"\r\n      optionText=\"title\"\r\n      list=\"units\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Stocks\"\r\n      source=\"stock\"\r\n      optionText=\"title\"\r\n      list=\"stock\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Employees\"\r\n      source=\"employee\"\r\n      optionText=\"title\"\r\n      list=\"employees\"\r\n      sort=\"title\"\r\n      resettable\r\n    />\r\n    <SelectInput\r\n      variant=\"standard\"\r\n      margin=\"none\"\r\n      label=\"Voucher Type\"\r\n      source=\"vou_type\"\r\n      optionText=\"title\"\r\n      optionValue=\"id\"\r\n      choices={vou_types}\r\n      fullWidth\r\n    />\r\n  </Filter>\r\n);\r\nconst PostPagination = (props) => (\r\n  <Pagination rowsPerPageOptions={[10, 25, 50, 100]} {...props} />\r\n);\r\n\r\nconst TransactionList = ({ id, record, resource }) => {\r\n  console.log(JSON.stringify(record));\r\n  return (\r\n    <table width=\"100%\" cellPadding=\"0\" cellSpacing=\"0\">\r\n      <tr>\r\n        <th>Account</th>\r\n        <th>Description</th>\r\n        <th>Debit</th>\r\n        <th>Credit</th>\r\n      </tr>\r\n      <tbody>\r\n        {record.transactions.map((t) => {\r\n          return (\r\n            <tr className=\"top\">\r\n              <td width=\"20%\">{t.coa}</td>\r\n              <td width=\"40%\">{t.description}</td>\r\n              <td width=\"20%\">{t.dr}</td>\r\n              <td width=\"20%\">{t.cr}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n    // <div><span>{t.coa}</span><span>{t.description}</span> <span>{t.dr}</span> <span>{t.cr}</span></div>\r\n  );\r\n};\r\nexport const VouchersList = (props) => (\r\n  <List\r\n    sort={{ field: \"row_id\", order: \"DESC\" }}\r\n    perPage={25}\r\n    pagination={<PostPagination />}\r\n    empty={false}\r\n    filters={<VouchersSearchFilter />}\r\n    {...props}\r\n    undoable={false}\r\n  >\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n      <Datagrid rowClick=\"edit\" expand={<TransactionList />}>\r\n        <TextField source=\"row_id\" />\r\n        <TextField source=\"vou_no\" />\r\n        <TextField source=\"vou_date\" />\r\n        {/* <ReferenceField label=\"Project\" source=\"project\" reference=\"Projects\">\r\n          <TextField source=\"title\" />\r\n        </ReferenceField> */}\r\n        <TextField source=\"chq_no\" />\r\n        <TextField source=\"chq_date\" />\r\n        <TextField source=\"created_by\" />\r\n        {/* <EditButton\r\n          label=\"\"\r\n          undoable={false}\r\n          // variant=\"contained\"\r\n          color=\"secondary\"\r\n        /> */}\r\n        {/* <DeleteButton /> */}\r\n      </Datagrid>\r\n    )}\r\n  </List>\r\n);\r\n\r\nexport const InvalidVouchersList = (props) => (\r\n  <List\r\n    sort={{ field: \"row_id\", order: \"DESC\" }}\r\n    perPage={25}\r\n    pagination={<PostPagination />}\r\n    empty={false}\r\n    basePath=\"/vouchers\"\r\n    resource=\"vouchers/invalidvou\"\r\n    filters={<VouchersSearchFilter />}\r\n    {...props}\r\n  >\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n      <Datagrid rowClick=\"edit\">\r\n        <TextField source=\"row_id\" />\r\n        <TextField source=\"vou_no\" />\r\n        <TextField source=\"vou_date\" />\r\n        {/* <ReferenceField label=\"Project\" source=\"project\" reference=\"Projects\">\r\n          <TextField source=\"title\" />\r\n        </ReferenceField> */}\r\n        <TextField source=\"debit\" />\r\n        <TextField source=\"credit\" />\r\n        <EditButton variant=\"standard\" color=\"secondary\" />\r\n        {/* <DeleteButton /> */}\r\n      </Datagrid>\r\n    )}\r\n  </List>\r\n);\r\n\r\nconst VouchersTitle = ({ record }) => {\r\n  return <span>Voucher {record ? `\"${record.vou_no}\"` : \"\"}</span>;\r\n};\r\nexport const VouchersEdit = (props) => {\r\n  return (\r\n    <Edit undoable={false} actions={null} title={<VouchersTitle />} {...props}>\r\n      <VoucherEntryForm {...props} />\r\n    </Edit>\r\n  );\r\n};\r\n\r\nexport const VouchersCreate = (props) => {\r\n  const vou_type = useQuery(\"vou_type\");\r\n  return (\r\n    <Create undoable={false} title=\"New Voucher\" {...props}>\r\n      <VoucherEntryForm vou_type={vou_type} {...props} />\r\n    </Create>\r\n  );\r\n};\r\n\r\nexport const VouchersShow = (props) => {\r\n  return <VoucherShow {...props} />;\r\n};\r\n\r\nconst dateFormatter = (v) => {\r\n  // v is a `Date` object\r\n  if (!(v instanceof Date) || isNaN(v)) return;\r\n  const pad = \"00\";\r\n  const yy = v.getFullYear().toString();\r\n  const mm = (v.getMonth() + 1).toString();\r\n  const dd = v.getDate().toString();\r\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\n\r\nconst dateParser = (v) => {\r\n  // v is a string of \"YYYY-MM-DD\" format\r\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\r\n  if (match === null) return;\r\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\r\n  if (isNaN(d)) return;\r\n  return d;\r\n};\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\MyLoginForm.js",["262","263","264","265","266","267","268","269","270","271","272","273"],"import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useLogin, useNotify, Notification, defaultTheme } from \"react-admin\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { createMuiTheme, Car } from \"@material-ui/core/styles\";\r\nimport { Box, makeStyles, MenuItem } from \"@material-ui/core\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport compose from \"recompose/compose\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport { translate, userLogin } from \"react-admin\";\r\nimport FirdousSelect from \"./accounts/FirdousSelect\";\r\nimport { Select, TextField } from \"@material-ui/core\";\r\nimport background from \"../../app/assets/firdous-night-view.jpg\";\r\nconst MyLoginPage = ({ theme }) => {\r\n  const styles = makeStyles({\r\n    main: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      minHeight: \"100vh\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-start\",\r\n      //   background: \"url(https://source.unsplash.com/random/1600x900)\",\r\n      background: `url(${background})`,\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n    },\r\n    card: {\r\n      minWidth: 300,\r\n      marginTop: \"6em\",\r\n    },\r\n    avatar: {\r\n      margin: \"1em\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    icon: {},\r\n    hint: {\r\n      marginTop: \"1em\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    form: {\r\n      padding: \"0 1em 1em 1em\",\r\n    },\r\n    input: {\r\n      marginTop: \"1em\",\r\n    },\r\n    actions: {\r\n      padding: \"0 1em 1em 1em\",\r\n    },\r\n  });\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [project, setProject] = useState(\"\");\r\n  const login = useLogin();\r\n  const notify = useNotify();\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (!project || project == 0) {\r\n      notify(\"Please select a project\");\r\n      return;\r\n    }\r\n    login({ username, password, project }).catch(() =>\r\n      notify(\"Invalid username or password\")\r\n    );\r\n  };\r\n  const renderInput = () => (\r\n    <FirdousSelect\r\n      source=\"projects\"\r\n      list=\"projects\"\r\n      sort=\"title\"\r\n      optionText=\"title\"\r\n      fullWidth\r\n    />\r\n  );\r\n  const classes = styles();\r\n  return (\r\n    <div className={classes.main}>\r\n      <Card className={classes.card}>\r\n        <div className={classes.avatar}>\r\n          <Avatar className={classes.icon}>\r\n            <LockIcon />\r\n          </Avatar>\r\n        </div>\r\n\r\n        <form onSubmit={submit}>\r\n          <div className={classes.form}>\r\n            <div className={classes.input}>\r\n              <TextField\r\n                name=\"username\"\r\n                type=\"username\"\r\n                label=\"Username\"\r\n                // value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </div>\r\n            <div className={classes.input}>\r\n              <TextField\r\n                name=\"password\"\r\n                type=\"password\"\r\n                label=\"Password\"\r\n                // value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                fullWidth\r\n              />\r\n            </div>\r\n            <div className={classes.input}>\r\n              <Select\r\n                name=\"project\"\r\n                label=\"Project\"\r\n                labelId=\"Project\"\r\n                onChange={(e) => setProject(e.target.value)}\r\n                fullWidth\r\n                placeholder=\"Projects\"\r\n                initialValue=\"0\"\r\n              >\r\n                {/* <option value=\"0\" selected>\r\n                  Please select a Project\r\n                </option>\r\n                <option value=\"47\">Infinity</option>\r\n                <option value=\"48\">Pride</option> */}\r\n                <MenuItem value={47}>Infinity</MenuItem>\r\n                <MenuItem value={48}>Pride</MenuItem>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <CardActions className={classes.actions}>\r\n            <Button\r\n              variant=\"raised\"\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              fullWidth\r\n            >\r\n              Login\r\n            </Button>\r\n          </CardActions>\r\n        </form>\r\n      </Card>\r\n      <Notification />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyLoginPage;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\booking.js",["274","275","276","277","278","279","280","281","282"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingFormWizard.js",["283","284","285"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\inventory\\stock.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\custom\\CustomMenu.js",["286","287"],"import { useMediaQuery } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\nimport LabelIcon from \"@material-ui/icons/Label\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport DefaultIcon from \"@material-ui/icons/ViewList\";\r\nimport * as React from \"react\";\r\nimport { DashboardMenuItem, getResources, MenuItemLink } from \"react-admin\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nconst Menu = ({ onMenuClick, logout }) => {\r\n  const isXSmall = useMediaQuery((theme) => theme.breakpoints.down(\"xs\"));\r\n  const open = useSelector((state) => state.admin.ui.sidebarOpen);\r\n  const resources = useSelector(getResources);\r\n  return (\r\n    <div className=\"firdousmenu\">\r\n      <DashboardMenuItem onClick={onMenuClick} sidebarIsOpen={open} />\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/accounts\"\r\n        primaryText=\"Accounts\"\r\n        leftIcon={<AccountBalanceWalletIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/purchases\"\r\n        primaryText=\"Purchases\"\r\n        leftIcon={<ShoppingCartIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/sales\"\r\n        primaryText=\"Sales\"\r\n        leftIcon={<AttachMoneyIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n\r\n      {resources.map((resource) => {\r\n        if (resource.options && resource.options.menu === \"false\") {\r\n          //console.log(resource);\r\n          return;\r\n        } else if (resource.hasList) {\r\n          return (\r\n            <div>\r\n              <MenuItemLink\r\n                key={resource.name}\r\n                to={`/${resource.name}`}\r\n                primaryText={\r\n                  (resource.options && resource.options.label) || resource.name\r\n                }\r\n                leftIcon={resource.icon ? <resource.icon /> : <DefaultIcon />}\r\n                onClick={onMenuClick}\r\n                sidebarIsOpen={open}\r\n              />\r\n              <Divider light />\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n\r\n      <Divider light />\r\n      <MenuItemLink\r\n        to=\"/custom-route\"\r\n        primaryText=\"Miscellaneous\"\r\n        leftIcon={<LabelIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n      <MenuItemLink\r\n        to=\"/reports\"\r\n        primaryText=\"Reports\"\r\n        leftIcon={<AssessmentIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n\r\n      <MenuItemLink\r\n        to=\"/setting\"\r\n        primaryText=\"Settings\"\r\n        leftIcon={<SettingsIcon />}\r\n        onClick={onMenuClick}\r\n        sidebarIsOpen={open}\r\n      />\r\n      {isXSmall && logout}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\payroll\\employees.js",["288","289"],"import { Grid, useMediaQuery } from '@material-ui/core';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport * as React from \"react\";\r\nimport { BooleanInput, Create, Datagrid, DeleteButton, Edit, EditButton, Filter, List, ListButton, ReferenceInput, SearchInput, SelectInput, SimpleForm, SimpleList, TextField, TextInput, TopToolbar } from 'react-admin';\r\nimport FirdousSelect from '../accounts/FirdousSelect';\r\nexport const EmployeesIcon = StoreIcon;\r\n\r\nexport const EmployeesActions = ({ basePath, data }) => (\r\n  <TopToolbar>\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\nconst EmployeesSearchFilter = (props) => (\r\n\r\n  <Filter {...props}>\r\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n  </Filter>\r\n\r\n);\r\n\r\nexport const EmployeesList = props => (\r\n  <List filters={<EmployeesSearchFilter />} {...props}>\r\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={record => record.title}\r\n        secondaryText={record => `${record.code}`}\r\n        tertiaryText={record => record.id}\r\n\r\n      />\r\n    ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"code\" />\r\n          <TextField source=\"scode\" />\r\n          <TextField source=\"title\" />\r\n          <TextField source=\"remarks\" />\r\n          <EditButton variant=\"contained\" color=\"secondary\" />\r\n          <DeleteButton />\r\n        </Datagrid>)}\r\n  </List>\r\n);\r\n\r\nconst EmployeesTitle = ({ record }) => {\r\n  return <span>Employees {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const EmployeesEdit = (props) => (\r\n  <Edit undoable={false} title={<EmployeesTitle />} {...props}>\r\n\r\n    <SimpleForm\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"code\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"scode\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput multiline source=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"designation\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"grade\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"department\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"address\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"city\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"cnic\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n        <FirdousSelect source=\"coa\" list=\"coa\" sort=\"title\" optionText=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"remarks\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <BooleanInput source=\"active\" fullWidth />\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n     \r\n        \r\n    </SimpleForm>\r\n\r\n  </Edit>\r\n);\r\n\r\nexport const EmployeesCreate = (props) => (\r\n  <Create undoable={false} title=\"New Employee\" {...props}>\r\n    <SimpleForm\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput  source=\"code\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"scode\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput multiline source=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"designation\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"grade\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"department\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"address\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"city\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"cnic\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n        <FirdousSelect source=\"coa\" list=\"coa\" sort=\"title\" optionText=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"remarks\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <BooleanInput source=\"active\" fullWidth />\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </SimpleForm>\r\n  </Create>\r\n);","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\grn.js",["290","291","292"],"import { Grid, makeStyles, Toolbar, useMediaQuery } from \"@material-ui/core\";\r\nimport ApartmentIcon from \"@material-ui/icons/Apartment\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport * as React from \"react\";\r\nimport {\r\n  ArrayInput,\r\n  BooleanInput,\r\n  Button,\r\n  Create,\r\n  Datagrid,\r\n  DateInput,\r\n  DeleteButton,\r\n  Edit,\r\n  EditButton,\r\n  ExportButton,\r\n  Filter,\r\n  FormTab,\r\n  List,\r\n  ListButton,\r\n  NumberInput,\r\n  required, SaveButton,\r\n  SearchInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  SimpleList,\r\n  TabbedForm,\r\n  TextField,\r\n  TextInput,\r\n  TopToolbar,\r\n  useNotify,\r\n  useRedirect,\r\n  useRefresh\r\n} from \"react-admin\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport FirdousSelect from \"../accounts/FirdousSelect\";\r\nimport PrintPOComponent from \"./PrintPOComponent\";\r\n\r\nexport const GrnIcon = ApartmentIcon;\r\nconst useStyles = makeStyles({\r\n  iteratorinput50: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"1em\",\r\n      width: \"12%\",\r\n      MuiSwitch: { root: { top: \"1em\" } },\r\n    },\r\n  },\r\n\r\n  po_item: {\r\n    \"@media (min-width: 600px)\": {\r\n      border: \"1px solid #ccc\",\r\n      width: \"95%\",\r\n      padding: \"1em\",\r\n      marginTop: \"2em\",\r\n    },\r\n  },\r\n});\r\nexport const GrnActions = ({ basePath, resource, currentSort, maxResults, filterValues, data }) => (\r\n  <TopToolbar>\r\n    <ExportButton\r\n      disabled={data.size === 0}\r\n      resource={resource}\r\n      sort={currentSort}\r\n      filterValues={filterValues}\r\n      maxResults={maxResults}\r\n    />\r\n  </TopToolbar>\r\n);\r\n\r\nconst GrnSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Title\"\r\n      source=\"title\"\r\n      alwaysOn\r\n    />\r\n    <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"SCode\"\r\n      source=\"scode\"\r\n      alwaysOn\r\n    />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n  </Filter>\r\n);\r\n\r\nexport const GrnList = (props) => (\r\n  <List empty={false} actions={<GrnActions />} filters={<GrnSearchFilter />} {...props}>\r\n    {useMediaQuery((theme) => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={(record) => record.title}\r\n        secondaryText={(record) => `${record.code}`}\r\n        tertiaryText={(record) => record.id}\r\n      />\r\n    ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"grn_no\" />\r\n          <TextField source=\"grn_date\" />\r\n          <TextField source=\"po_no\" />\r\n          <TextField source=\"created_on\" />\r\n          <TextField source=\"created_by\" />\r\n          <TextField source=\"refno\" />\r\n          <TextField source=\"remarks\" />\r\n          <EditButton variant=\"contained\" color=\"secondary\" />\r\n        </Datagrid>\r\n      )}\r\n  </List>\r\n);\r\n\r\nconst GrnTitle = ({ record }) => {\r\n  return <span>Grn {record ? `\"${record.grn_no}\"` : \"\"}</span>;\r\n};\r\n\r\nconst CustomToolbar = (props) => {\r\n  const componentRef = React.useRef();\r\n  return (\r\n    <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n          <SaveButton undoable={false} {...props} />\r\n        </Grid>\r\n        <Grid item>\r\n          <ListButton\r\n            basePath={\r\n              props.record.po_id\r\n                ? \"/purchaseorder/\" + props.record.po_id\r\n                : props.basePath\r\n            }\r\n            label=\"Back\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            icon={<ChevronLeft />}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <ReactToPrint\r\n            trigger={() => {\r\n              // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n              // to the root node of the returned component as it will be overwritten.\r\n              return (\r\n                <Button\r\n                  disabled={!props.record.id}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  label=\"Print\"\r\n                  size=\"medium\"\r\n                  icon={<PrintIcon />}\r\n                />\r\n              );\r\n            }}\r\n            content={() => componentRef.current}\r\n          />\r\n          <div style={{ display: \"none\" }}>\r\n            {console.log(props)}\r\n            <PrintPOComponent ref={componentRef} {...props} />\r\n          </div>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            component={Link}\r\n            to={{\r\n              pathname: \"/bill/create\",\r\n              state: {\r\n                record: {\r\n                  po_no: props.record.po_no,\r\n                  po_id: props.record.po_id,\r\n                  grn_details: props.record.purchase_details,\r\n                },\r\n              },\r\n            }}\r\n            label=\"Add Bills\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            icon={<ChevronLeft />}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <DeleteButton undoable={false} />\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport const GrnEdit = (props) => (\r\n  <Edit undoable={false} title={<GrnTitle />} {...props}>\r\n    <SimpleForm\r\n      toolbar={<CustomToolbar />}\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <GRN_FORM />\r\n    </SimpleForm>\r\n  </Edit>\r\n);\r\n\r\nexport const GrnCreate = (props) => {\r\n  const notify = useNotify();\r\n  const refresh = useRefresh();\r\n  const redirect = useRedirect();\r\n  const onFailure = (error) => {\r\n    notify(`Could not edit post: ${error}`);\r\n  };\r\n\r\n  console.log(JSON.stringify(props));\r\n  return (\r\n    <Create title=\"New Goods Reciept\" {...props}>\r\n      <TabbedForm\r\n        toolbar={<CustomToolbar />}\r\n        initialValues={{}}\r\n        variant={\"standard\"}\r\n        sanitizeEmptyValues={false}\r\n        margin=\"none\"\r\n        fullWidth\r\n        {...props}\r\n      >\r\n        <FormTab label=\"Goods Receipt\">\r\n          <GRN_FORM {...props} />\r\n        </FormTab>\r\n        <FormTab label=\"Bills\"></FormTab>\r\n      </TabbedForm>\r\n    </Create>\r\n  );\r\n};\r\nconst ra_required = [required()];\r\nexport const GRN_FORM = (props) => {\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem(\"jwtToken\"));\r\n\r\n  return (\r\n    <div>\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput disabled variant=\"outlined\" source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <DateInput\r\n            disabled\r\n            variant=\"outlined\"\r\n            source=\"created_on\"\r\n            initialValue={new Date().toISOString().substring(0, 10)}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput\r\n            disabled\r\n            initialValue={user && user.username}\r\n            variant=\"outlined\"\r\n            source=\"created_by\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput disabled variant=\"outlined\" source=\"grn_no\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <DateInput\r\n            initialValue={new Date().toISOString().substring(0, 10)}\r\n            variant=\"outlined\"\r\n            source=\"grn_date\"\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            defaultValue={props.po_no}\r\n            source=\"po_no\"\r\n            fullWidth\r\n            disabled\r\n            validate={ra_required}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <FirdousSelect\r\n            variant=\"outlined\"\r\n            label=\"Supplier\"\r\n            list=\"suppliers\"\r\n            source=\"supplier_id\"\r\n            sort=\"title\"\r\n            optionText={\"title\"}\r\n            validate={ra_required}\r\n            initialValue={1}\r\n            fullWidth\r\n            formClassName={classes.iteratorinput50}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput variant=\"outlined\" source=\"ref_no\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextInput multiline source=\"remarks\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BooleanInput label=\"Post Ledger Entry\" source=\"postledger\" fullWidth />\r\n        </Grid>\r\n      </Grid>\r\n      <div className={classes.po_item}>\r\n        <ArrayInput\r\n          //initialValue={initial}\r\n          validate={ra_required}\r\n          variant=\"standard\"\r\n          source=\"grn_details\"\r\n          label=\"Items\"\r\n          fullWidth\r\n        >\r\n          <SimpleFormIterator fullWidth>\r\n            <BooleanInput\r\n              label=\"\"\r\n              width=\"10px\"\r\n              source=\"complete\"\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n            <FirdousSelect\r\n              label=\"Item\"\r\n              list=\"stock\"\r\n              source=\"stock_id\"\r\n              sort=\"title\"\r\n              optionText={\"title\"}\r\n              //validate={ra_required}\r\n              initialValue={1}\r\n              fullWidth\r\n              formClassName={classes.iteratorinput50}\r\n            />\r\n\r\n            <TextInput\r\n              label=\"Unit\"\r\n              source=\"unit\"\r\n              //validate={ra_required}\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n            <NumberInput\r\n              label=\"Quantity\"\r\n              source=\"qty_ord\"\r\n              //validate={ra_required}\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n            <NumberInput\r\n              label=\"Unit Price\"\r\n              source=\"unit_price\"\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n            <TextInput\r\n              label=\"Sub Total\"\r\n              source=\"subtotal\"\r\n              //validate={ra_required}\r\n              // value={scopedFormData &&  parseFloat((scopedFormData.unit_price || 0) * (scopedFormData.quantity || 0))}\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n\r\n            <TextInput\r\n              disabled\r\n              label=\"Qty Received\"\r\n              source=\"qty_rec\"\r\n              validate={ra_required}\r\n              // value={scopedFormData &&  parseFloat((scopedFormData.unit_price || 0) * (scopedFormData.quantity || 0))}\r\n              formClassName={classes.iteratorinput50}\r\n              fullWidth\r\n            />\r\n          </SimpleFormIterator>\r\n        </ArrayInput>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\clients.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\purchaseorders.js",["293","294","295","296","297","298"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\settings\\Fprop.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\ProjectLedger.js",["299","300","301","302","303","304"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\ConsolidatedTrialBalance.js",["305","306","307","308","309","310","311","312","313","314"],"import * as React from \"react\";\r\nimport { DateInput, Filter, List, useListContext } from \"react-admin\";\r\n\r\nexport function formatCurrency(amount) {\r\n  return !amount\r\n    ? \"0.00\"\r\n    : Number.parseFloat(amount)\r\n        .toFixed(2)\r\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n}\r\n\r\nconst TrialBalanceSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    {/* <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Account\"\r\n      source=\"coa_title\"\r\n      alwaysOn\r\n    /> */}\r\n\r\n    {/* <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Projects\"\r\n      source=\"project\"\r\n      optionText=\"title\"\r\n      list=\"projects\"\r\n      sort=\"title\"\r\n      alwaysOn\r\n    /> */}\r\n    {/*     <ReferenceArrayInput reference=\"coa\" source=\"coa\" alwaysOn>\r\n        <SelectArrayInput optionText=\"title\">\r\n          <ChipField source=\"coa\" optionText=\"title\" />\r\n        </SelectArrayInput>\r\n      </ReferenceArrayInput> */}\r\n\r\n    <DateInput\r\n      variant=\"standard\"\r\n      label=\"Period from\"\r\n      source=\"vou_date_from\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <DateInput\r\n      variant=\"standard\"\r\n      label=\"Period To\"\r\n      source=\"vou_date_to\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n  </Filter>\r\n);\r\n\r\nconst styles = `\r\n\r\nh1{\r\n  font-size:14pt !important;\r\n}\r\n.container-main{\r\n  font-family: Helvetica, Sans-Serif;\r\n  font-size:9pt;\r\n  margin:0.5em;\r\n}\r\n.types{\r\n\r\n  border-bottom:1px solid #ccc;\r\n  padding: 1em;\r\n}\r\n.headtitle{\r\n  font-weight:bold;\r\n  width: 250px;\r\n  \r\n  padding-left:2em;\r\n  padding-top:1em;\r\n  border-bottom:0px solid #ccc;\r\n  \r\n}\r\n.ct-title{\r\n  font-size:14pt !important;\r\n}\r\n.grand {\r\n  border-right: 1px solid #a55252 !important;\r\n  background: rgb(0 0 0 / 14%);\r\n  padding-right:5px;\r\n}\r\n\r\n.subheads{\r\n  font-size:12pt !important;\r\n  border-bottom:1px solid #ccc;\r\n  padding-top : 1em;\r\n  font-weight:bold;\r\n}\r\n.subheads{\r\n  border:none !important;\r\n  border-bottom:1px solid #ccc !important;\r\n}\r\n.topheads{\r\n  \r\n}\r\n.MuiToolbar-root{\r\n  \r\n}\r\n.account{\r\n  width: 100px;\r\n}\r\n.account_r{\r\n  width: 100px;\r\n  text-align:right;\r\n}\r\n.account_l{\r\n  width: 100px;\r\n  text-align:left;\r\n}\r\n.accounttitle{\r\n  width : 200px;\r\n  text-align:left;\r\n}\r\n.accountcode{\r\n  width: 65px;\r\n}\r\n.twocolumn{\r\n  width:200px;\r\n}\r\nth.account, th.accountcode,th.accounttitle,th.twocolumn {\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: 10pt;\r\n  background: #e0e0e3;\r\n  height: 25px;\r\n  text-transform: uppercase;\r\n  padding-left: 2px;\r\n  border: 1px solid #00000014;\r\n  border-right: none;\r\n}\r\n\r\n.grouptotal{\r\n  font-size:10pt;\r\n  font-weight:bold;\r\n  --border-bottom:1px solid #ccc;\r\n  padding-top : 1em;\r\n  text-align:right;\r\n}\r\n.periodlist td{\r\n  border-left:1px solid #ccc;\r\n  border-bottom:1px solid #ccc;\r\n}\r\n.t-center{\r\n  text-align:center;\r\n}\r\n.width100{\r\n  width:100px;\r\n}\r\n\r\n@media print {\r\n  \r\n  @Page{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: none;\r\n    background: none;\r\n\r\n    // margin: 0;\r\n    // padding: 0;\r\n    // border: none;\r\n    // background: none;\r\n    // transform: rotate(270deg) translate(-210mm, 0);\r\n    // transform-origin: 0 0;\r\n  }\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n  #section-to-print, #section-to-print * {\r\n    font-family: sans-serif;\r\n    visibility: visible;\r\n    font-size:6pt;\r\n  }\r\n  #section-to-print {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 10px;\r\n    padding:0;\r\n    padding-top:10px;\r\n    margin-top:10px;\r\n   \r\n  }\r\n  th.account, th.accountcode,th.accounttitle,th.twocolumn,td {\r\n        border-right: 1px solid #00000014;\r\n  }\r\n  .subheads{\r\n    font-size:8pt !important;\r\n  }\r\nh1{\r\n  font-size:8pt !important;\r\n}\r\n}\r\n`;\r\n\r\nconst CommentGrid = () => {\r\n  const { ids, data, basePath } = useListContext();\r\n  const types = [];\r\n  const heads = [];\r\n  const groupSubHeads = {};\r\n  const groupTypes = {};\r\n\r\n  ids.map((id) => {\r\n    var record = data[id];\r\n\r\n    groupTypes[record.ct_id] = { name: record.ct_title };\r\n    groupSubHeads[record.n_id] = {\r\n      head: record.ct_id,\r\n      headtitle: record.ct_title,\r\n      id: record.n_id,\r\n      name: record.n_title,\r\n    };\r\n  });\r\n\r\n  ids.map((id) => {\r\n    var record = data[id];\r\n    const subheads = groupSubHeads[record.n_id];\r\n    subheads.children = [...(subheads.children || []), record];\r\n  });\r\n\r\n  // Object.keys(groupSubHeads).map((key,index)=>{\r\n  //   console.log(key);\r\n  //   const subhead = groupSubHeads[key];\r\n  //   subhead.total_p_dr = subhead.children.reduce((debit_pr, item) => debit_pr + item.p_dr, 0);\r\n  //   subhead.total_p_cr = subhead.children.reduce((credit_pr, item) => credit_pr + item.p_dr, 0);\r\n  // });\r\nlet grand_total_opening_dr=0;\r\n let grand_total_opening_cr=0;\r\n let grand_total_current_dr=0;\r\n let grand_total_current_cr=0;\r\n let grand_total_closing_dr=0;\r\n let grand_total_closing_cr=0;\r\n\r\n  for (var index in groupSubHeads) {\r\n    const subhead = groupSubHeads[index];\r\n    let { children } = subhead;\r\n    subhead.total_p_dr = children.reduce(\r\n      (sum, item) => sum + ((item.p_dr && parseFloat(item.p_dr)) || 0),\r\n      0\r\n    );\r\n    subhead.total_p_cr = children.reduce(\r\n      (sum, item) => sum + ((item.p_cr && parseFloat(item.p_cr)) || 0),\r\n      0\r\n    );\r\n    subhead.total_pl_dr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.open_balance >= 0 && parseFloat(item.open_balance)) || 0),\r\n      0\r\n    );\r\n    subhead.total_pl_cr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.open_balance < 0 && parseFloat(item.open_balance)) || 0),\r\n      0\r\n    );\r\n\r\n    subhead.total_closing_dr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.close_balance >= 0 && parseFloat(item.close_balance)) || 0),\r\n      0\r\n    );\r\n\r\n    subhead.total_closing_cr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.close_balance < 0 && parseFloat(item.close_balance)) || 0),\r\n      0\r\n    );\r\n    grand_total_opening_dr +=subhead.total_p_dr;\r\n    grand_total_opening_cr +=subhead.total_p_cr;\r\n    grand_total_current_dr+=subhead.total_pl_dr;\r\n    grand_total_current_cr+=subhead.total_pl_cr;\r\n    grand_total_closing_dr +=subhead.total_closing_dr;\r\n    grand_total_closing_cr +=subhead.total_closing_cr; \r\n\r\n    const head = groupTypes[subhead.head];\r\n    console.log(head);\r\n    head.children = [...(head.children || []), subhead];\r\n  }\r\n  console.log(\"grouptyes:\");\r\n  console.log(groupTypes);\r\n  let { records } = groupSubHeads;\r\n  return (\r\n    <html lang={\"en_US\"}>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Trial Balance</title>\r\n        <style dangerouslySetInnerHTML={{ __html: styles }} />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </head>\r\n      <body id=\"section-to-print\">\r\n        <div  className=\"container-main\">\r\n        <table cellspacing=\"0\" width=\"100%\">\r\n        <thead>\r\n              <th width=\"215px\" className=\"subheads\">Trial Balance Report</th>\r\n              <th width=\"65px\"></th>\r\n              <th width=\"200px\"></th>\r\n              {/* <th className=\"width100 account_r\">Grand Opening Debit</th>\r\n              <th className=\"width100 account_r\">Grand Opening Credit</th>\r\n              <th className=\"width100 account_r\">Grand Current Period Debit</th>\r\n              <th className=\"width100 account_r\">Grand Current Period Credit</th> */}\r\n              <th className=\"width100 account_r\">Grand Closing Debit</th>\r\n              <th className=\"width100 account_r\">Grand Closing Credit</th>\r\n            </thead>\r\n          <tr className=\"accounttitle\">\r\n          <td colspan=\"3\" className=\"subheads account_r\">Grand Totals</td>\r\n            \r\n            {/* <td className=\"account_r subheads grand\">{formatCurrency(grand_total_opening_dr)}</td>\r\n            <td className=\"account_r subheads grand\" >{formatCurrency(grand_total_opening_cr)}</td>\r\n            <td className=\"account_r subheads grand\">{formatCurrency(grand_total_current_dr)}</td>\r\n            <td className=\"account_r subheads grand\">{formatCurrency(grand_total_current_cr)}</td> */}\r\n            <td className=\"account_r subheads grand\">{formatCurrency(grand_total_closing_dr)}</td>\r\n            <td className=\"account_r subheads grand\">{formatCurrency(grand_total_closing_cr)}</td>\r\n          </tr>\r\n        </table>\r\n          \r\n          <table cellspacing=\"0\" width=\"100%\">\r\n            <thead>\r\n              <th className=\"account\">Account</th>\r\n              <th className=\"accountcode\">Account No.</th>\r\n              <th className=\"accounttitle\">Account Title</th>\r\n              {/* <th colspan=\"2\" className=\"twocolumn\">\r\n                Opening Balance\r\n              </th>\r\n\r\n              <th colspan=\"2\" className=\"twocolumn\">\r\n                Current Period{\" \"}\r\n              </th> */}\r\n\r\n              <th colspan=\"2\" className=\"twocolumn\">\r\n                Closing{\" \"}\r\n              </th>\r\n            </thead>\r\n            <thead>\r\n              <th width=\"100px\"></th>\r\n              <th width=\"65px\"></th>\r\n              <th width=\"200px\"></th>\r\n              {/* <th className=\"width100\">Debit</th>\r\n              <th className=\"width100\">Credit</th>\r\n              <th className=\"width100\">Debit</th>\r\n              <th className=\"width100\">Credit</th> */}\r\n              <th className=\"width100\">Debit</th>\r\n              <th className=\"width100\">Credit</th>\r\n            </thead>\r\n\r\n            {Object.keys(groupTypes).map((key, index) => {\r\n              const head = groupTypes[key];\r\n              return head.children.map((subhead) => {\r\n                return (\r\n                  <tr>\r\n                    <td colspan=\"9\">\r\n                      <table className=\"periodlist\" width=\"100%\">\r\n                        <tr>\r\n                          <td className=\"subheads\" colspan=\"9\">\r\n                            {subhead.name}\r\n                          </td>\r\n                        </tr>\r\n                        {subhead.children.map((account) => {\r\n                          return (\r\n                            <tr>\r\n                              <td className=\"account\" />\r\n                              <td className=\"accountcode\">\r\n                                {account.coa_code}\r\n                              </td>\r\n                              <td className=\"accounttitle\">\r\n                                {account.coa_title}\r\n                              </td>\r\n\r\n                              {/* <td className=\"account_r\">\r\n                                {account.open_balance >= 0 &&\r\n                                  formatCurrency(account.open_balance)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {account.open_balance < 0 &&\r\n                                  formatCurrency(account.open_balance)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {formatCurrency(account.p_dr)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {formatCurrency(account.p_cr)}\r\n                              </td> */}\r\n                              <td className=\"account_r\">\r\n                                {account.close_balance >= 0 &&\r\n                                  formatCurrency(account.close_balance)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {account.close_balance < 0 &&\r\n                                  formatCurrency(account.close_balance)}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <td />\r\n                          <td />\r\n                          <td className=\"grouptotal\">Group Totals</td>\r\n\r\n                          {/* <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_pl_dr)}\r\n                          </td>\r\n\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_pl_cr)}\r\n                          </td>\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_p_dr)}\r\n                          </td>\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_p_cr)}\r\n                          </td> */}\r\n                          <td className=\"grouptotal\">{formatCurrency(subhead.total_closing_dr)}</td>\r\n                          <td className=\"grouptotal\">{formatCurrency(subhead.total_closing_cr)}</td>\r\n                        </tr>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              });\r\n            })}\r\n          </table>\r\n        </div>\r\n      </body>\r\n    </html>\r\n  );\r\n};\r\n\r\nexport const TrialBalanceConsolidatedList = (props) => (\r\n  <List pagination={false} {...props} filters={<TrialBalanceSearchFilter />}>\r\n    {<CommentGrid />}\r\n  </List>\r\n);\r\n\r\nexport default TrialBalanceConsolidatedList;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\AccountsLedger.js",["315","316","317"],"import * as React from \"react\";\r\nimport { cloneElement } from \"react\";\r\nimport { Button, DateInput, ExportButton, Filter, List, TopToolbar, useListContext } from \"react-admin\";\r\nimport FirdousSelect from \"../accounts/FirdousSelect\";\r\n\r\nexport function formatCurrency(amount) {\r\n  return !amount\r\n    ? \"0.00\"\r\n    : Number.parseFloat(amount)\r\n        .toFixed(2)\r\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n}\r\n\r\nconst AccountsLedgerSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    {/* <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Account\"\r\n      source=\"coa_title\"\r\n      alwaysOn\r\n    /> */}\r\n\r\n    { <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Account\"\r\n      source=\"coa\"\r\n      optionText=\"title\"\r\n      list=\"coa\"\r\n      sort=\"title\"\r\n      alwaysOn\r\n    /> }\r\n    {/*     <ReferenceArrayInput reference=\"coa\" source=\"coa\" alwaysOn>\r\n        <SelectArrayInput optionText=\"title\">\r\n          <ChipField source=\"coa\" optionText=\"title\" />\r\n        </SelectArrayInput>\r\n      </ReferenceArrayInput> */}\r\n\r\n    <DateInput\r\n      variant=\"standard\"\r\n      label=\"Period from\"\r\n      source=\"vou_date_from\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <DateInput\r\n      variant=\"standard\"\r\n      label=\"Period To\"\r\n      source=\"vou_date_to\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n  </Filter>\r\n);\r\n\r\nconst styles = `\r\n\r\nh1{\r\n  font-size:14pt !important;\r\n}\r\n.container-main{\r\n  font-family: Helvetica, Sans-Serif;\r\n  //font-size:10pt;\r\n  //margin:0.5em;\r\n}\r\n.types{\r\n\r\n  border-bottom:1px solid #ccc;\r\n  padding: 1em;\r\n}\r\n.headtitle{\r\n  font-weight:bold;\r\n  width: 250px;\r\n  \r\n  padding-left:2em;\r\n  padding-top:1em;\r\n  border-bottom:0px solid #ccc;\r\n  \r\n}\r\n.ct-title{\r\n  font-size:14pt !important;\r\n}\r\n.grand {\r\n  border-right: 1px solid #a55252 !important;\r\n  background: rgb(0 0 0 / 14%);\r\n  padding-right:5px;\r\n}\r\n\r\n\r\n\r\n\r\n.vou_date{\r\n  min-width:100px;\r\n  border-bottom: 1px solid #ddd;\r\n  border-left: 1px solid #ddd;\r\n  text-align:center;\r\n}\r\n.vou_no{\r\n  min-width:120px;\r\n  border-bottom: 1px solid #ddd;\r\n  padding-left: 10px;\r\n  border-left: 1px solid #ddd;\r\n}\r\n.vou_no a{\r\n  text-decoration: none;\r\n}\r\n.debit, .credit, .balance{\r\n  border-bottom: 1px solid #ddd;\r\n    border-left: 1px solid #ddd;\r\n    \r\n}\r\n\r\n.balance{\r\n  border-right: 1px solid #ddd;\r\n}\r\n.debit, .credit, .balance{\r\n    width: 150px;\r\n    padding: 10px;\r\n    text-align:right;\r\n    border-bottom: 1px solid #ddd;\r\n    border-left: 1px solid #ddd;\r\n}\r\n.description{\r\n  border-bottom: 1px solid #ddd;\r\n  min-width:400px;\r\n  border-left: 1px solid #ddd;\r\n  text-align:left;\r\n  padding:5px;\r\n  font-size:80%;\r\n}\r\n.topheads{\r\n  \r\n}\r\n.MuiToolbar-root{\r\n  \r\n}\r\n.account{\r\n  \r\n}\r\nthead td,.totals{\r\n  font-weight:bold;\r\n  text-align: left;\r\n  background-color: #1976d24a;\r\n // color: white;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  \r\n}\r\n.totals{\r\n\r\ntext-align:right;\r\n}\r\n.account_r{\r\n  width: 100px;\r\n  text-align:right;\r\n}\r\n.account_l{\r\n  width: 100px;\r\n  text-align:left;\r\n}\r\n.accounttitle{\r\n  \r\n  text-align:left;\r\n}\r\n.accountcode{\r\n  \r\n}\r\n.twocolumn{\r\n  width:200px;\r\n}\r\nth.account, th.accountcode,th.accounttitle,th.twocolumn,th.accountdebit,th.accountcredit,th.accountbalance, th.account {\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: 9pt;\r\n  background: #e0e0e3;\r\n  height: 25px;\r\n  text-transform: uppercase;\r\n  padding-left: 2px;\r\n  border: 1px solid #00000014;\r\n  border-right: none;\r\n}\r\n\r\n.grouptotal{\r\n  font-size:10pt;\r\n  font-weight:bold;\r\n  --border-bottom:1px solid #ccc;\r\n  padding-top : 1em;\r\n  text-align:right;\r\n}\r\n.periodlist td{\r\n  border-left:1px solid #ccc;\r\n  border-bottom:1px solid #ccc;\r\n}\r\n.t-center{\r\n  text-align:center;\r\n}\r\n.width100{\r\n  width:100px;\r\n}\r\n.title{\r\n  \r\n  font-size: 16pt;\r\n  background: #00000042;\r\n  padding: 10px;\r\n  color: #0000008a;\r\n  page-break-before: always;\r\n}\r\n\r\n@media print {\r\n  @Page{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: none;\r\n    background: none;\r\n    size: A4;\r\n    // margin: 0;\r\n    // padding: 0;\r\n    // border: none;\r\n    // background: none;\r\n    // transform: rotate(270deg) translate(-210mm, 0);\r\n    // transform-origin: 0 0;\r\n  }\r\n  body * {\r\n    visibility: hidden;\r\n    width:0px;\r\n    height:0px;\r\n  }\r\n  body {\r\n    margin: 0;\r\n}\r\n@page :first {\r\n  margin-top: 0in; // top margin for first page of paper\r\n}\r\n  #section-to-print, #section-to-print * {\r\n    font-family: sans-serif;\r\n    visibility: visible;\r\n    font-size:6pt;\r\n\r\n  }\r\n  .title{\r\n    margin-top:15pt;\r\n    page-break-before: always;\r\n  }\r\n  #section-to-print {\r\n\r\n    margin: 2.5cm 0;\r\n    //border 2px solid grey;\r\n    //position: absolute;\r\n    //width: 210mm;\r\n    //height: 297mm;\r\n      margin:10px !important;\r\n    //left: 0;\r\n    //top:0;\r\n    //top: 10px;\r\n    //padding:5px;\r\n    //padding-top:10px;\r\n    //margin-top:10px;\r\n    //margin-right:10px;\r\n   \r\n  }\r\n\r\n  th.account, th.accountcode,th.accounttitle,th.twocolumn,td {\r\n        border-right: 1px solid #00000014;\r\n  }\r\n  .subheads{\r\n    font-size:8pt !important;\r\n  }\r\nh1{\r\n  font-size:8pt !important;\r\n}\r\n}\r\n`;\r\n\r\nconst CommentGrid = () => {\r\n  const { ids, data, basePath,filterValues } = useListContext();\r\n  let sum_obal,sum_dr,sum_cr;\r\n  const accounts = {};\r\n  console.log(\"data::\"+JSON.stringify(data))\r\n  let accounttitle;\r\n  let openingbalance;\r\n  ids.map((id) => {\r\n    var record = data[id];\r\n    accounttitle = record.coa_title;\r\n    openingbalance =parseFloat(record.coa_obal) + parseFloat(record.sum_dr) - parseFloat(record.sum_cr);\r\n    // groupTypes[record.coa] = { name: record.coa_title };\r\n    accounts[record.coa] = {\r\n      accounttitle: record.coa_title,\r\n      id: record.coa,\r\n      obal: record.coa_obal,\r\n    };\r\n  });\r\n\r\n  ids.map((id) => {\r\n    var record = data[id];\r\n    console.log(\"record::\"+JSON.stringify(record))\r\n    const account = accounts[record.coa];\r\n    account.children = [...(account.children || []), record];\r\n  });\r\n\r\n  for (var index in accounts) {\r\n    const account = accounts[index];\r\n    let { children } = account;\r\n    account.total_dr = children.reduce(\r\n      (sum, item) => sum + ((item.dr && parseFloat(item.dr)) || 0),\r\n      0\r\n    );\r\n    sum_dr = account.total_dr;\r\n    account.total_cr = children.reduce(\r\n      (sum, item) => sum + ((item.cr && parseFloat(item.cr)) || 0),\r\n      0\r\n    );\r\n    sum_cr = account.total_cr;\r\n    \r\n  }\r\n  const jwt = JSON.parse(localStorage.getItem(\"jwtToken\"));\r\n  return (\r\n    <div>\r\n    <html lang={\"en_US\"}>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Accounts Ledger</title>\r\n        <style dangerouslySetInnerHTML={{ __html: styles }} />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </head>\r\n      <body id=\"section-to-print\">\r\n        <div  className=\"container-main\">\r\n         \r\n          <table id=\"mainTable\" cellspacing=\"0\" width=\"100%\">\r\n          <thead>\r\n              <th className=\"title\" colspan=\"3\"> {jwt && jwt.project && jwt.project.title} <br/> {accounttitle} from {filterValues && filterValues.vou_date_from +\" to \"+filterValues.vou_date_to}</th>\r\n              <th  className=\"title\" colspan=\"3\">Opening Balance: {openingbalance && formatCurrency(parseFloat(openingbalance))}</th>\r\n            </thead>\r\n            <thead>\r\n              <th className=\"account\">Voucher #</th>\r\n              <th className=\"accountcode\">Voucher Date.</th>\r\n              <th className=\"accounttitle\">Description</th>\r\n              <th className=\"accountdebit\">Debit</th>\r\n              <th className=\"accountcredit\">Credit</th>\r\n              <th className=\"accountbalance\">Balance</th>\r\n            </thead>\r\n            <tbody>\r\n            \r\n            {Object.keys(accounts).map((key, index) => {\r\n              const coa = accounts[key];\r\n              sum_obal = parseFloat(openingbalance);\r\n              return coa.children.map((voucher) => {\r\n                \r\n                  sum_obal = sum_obal +\r\n                  parseFloat(voucher.dr || 0) -\r\n                  parseFloat(voucher.cr || 0)\r\n                return (\r\n\r\n                  <tr>\r\n                  \r\n                  <td className=\"vou_no\">\r\n                    <a href={\"/#/transactions/\" + voucher.vou_no}>\r\n                      {voucher.vou_no}\r\n                    </a>\r\n                  </td>\r\n                  <td className=\"vou_date\">{voucher.vou_date_string}</td>\r\n                  <td className=\"description\">{voucher.particulars}</td>\r\n                  <td className=\"debit\">{formatCurrency(voucher.dr)}</td>\r\n                  <td className=\"credit\">{formatCurrency(voucher.cr)}</td>\r\n                  <td className=\"balance\">{formatCurrency(sum_obal)}</td>\r\n                </tr>\r\n                \r\n                );\r\n              });\r\n            })}\r\n             <tr class=\"totals\">\r\n                  <td className=\"totals\" />\r\n                  <td className=\"totals\" />\r\n                  <td className=\"totals\">Totals</td>\r\n                  <td className=\"totals\">{formatCurrency(sum_dr)}</td>\r\n                  <td className=\"totals\">{formatCurrency(sum_cr)}</td>\r\n                  <td className=\"totals\">{formatCurrency(sum_obal)}</td>\r\n                </tr>\r\n            </tbody>\r\n             <tfoot>\r\n                <tr>\r\n                  <td colspan=\"6\" className=\"footer\">\r\n                    Printed By {jwt && jwt.username} on{\" \"}\r\n                    {new Date().toISOString()}\r\n                  </td>\r\n                </tr>\r\n              </tfoot>\r\n          </table>\r\n        </div>\r\n      </body>\r\n    </html>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AccountLedgerListActions = (props) => (\r\n  <TopToolbar>\r\n    {cloneElement(props.filters, { context: \"button\" })}\r\n    <ExportButton />\r\n    {/* Add your custom actions */}\r\n    <Button\r\n      onClick={() => {\r\n        window.print();\r\n      }}\r\n      label=\"Print\"\r\n    ></Button>\r\n  </TopToolbar>\r\n);\r\n\r\nexport const AccountsLedgerList = (props) => (\r\n  <List pagination={false} {...props} filters={<AccountsLedgerSearchFilter />} actions={<AccountLedgerListActions />}>\r\n    {<CommentGrid />}\r\n  </List>\r\n);\r\n\r\nexport default AccountsLedgerList;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\TrialBalance.js",["318","319","320","321","322","323"],"import * as React from \"react\";\r\nimport { DateInput, Filter, List, useListContext } from \"react-admin\";\r\n\r\nexport function formatCurrency(amount) {\r\n  return !amount\r\n    ? \"0.00\"\r\n    : Number.parseFloat(amount)\r\n        .toFixed(2)\r\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n}\r\n\r\nconst TrialBalanceSearchFilter = (props) => (\r\n  <Filter {...props}>\r\n    {/* <SearchInput\r\n      variant=\"standard\"\r\n      placeholder=\"Account\"\r\n      source=\"coa_title\"\r\n      alwaysOn\r\n    /> */}\r\n\r\n    {/* <FirdousSelect\r\n      variant=\"standard\"\r\n      label=\"Projects\"\r\n      source=\"project\"\r\n      optionText=\"title\"\r\n      list=\"projects\"\r\n      sort=\"title\"\r\n      alwaysOn\r\n    /> */}\r\n    {/*     <ReferenceArrayInput reference=\"coa\" source=\"coa\" alwaysOn>\r\n        <SelectArrayInput optionText=\"title\">\r\n          <ChipField source=\"coa\" optionText=\"title\" />\r\n        </SelectArrayInput>\r\n      </ReferenceArrayInput> */}\r\n\r\n    <DateInput\r\n      variant=\"standard\"\r\n      label=\"Period from\"\r\n      source=\"vou_date_from\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n    <DateInput\r\n      variant=\"standard\"\r\n      label=\"Period To\"\r\n      source=\"vou_date_to\"\r\n      resettable\r\n      alwaysOn\r\n    />\r\n  </Filter>\r\n);\r\n\r\nconst styles = `\r\n\r\nh1{\r\n  font-size:14pt !important;\r\n}\r\n.container-main{\r\n  font-family: Helvetica, Sans-Serif;\r\n  font-size:9pt;\r\n  margin:0.5em;\r\n}\r\n.types{\r\n\r\n  border-bottom:1px solid #ccc;\r\n  padding: 1em;\r\n}\r\n.grandtotals{\r\n  border-top:3px solid #022f5a;\r\n  border-bottom:2px solid #022f5a;\r\n}\r\n.headtitle{\r\n  font-weight:bold;\r\n  width: 250px;\r\n  \r\n  padding-left:2em;\r\n  padding-top:1em;\r\n  border-bottom:0px solid #ccc;\r\n  \r\n}\r\n.ct-title{\r\n  font-size:14pt !important;\r\n}\r\n.grand {\r\n  border-left: 1px solid #ccc;\r\n  border-bottom: 1px solid #ccc;\r\n  background: rgb(0 0 0 / 14%);\r\n  padding-right:5px;\r\n  font-weight:bold;\r\n  font-size:10pt !important;\r\n}\r\n\r\n.subheads{\r\n  font-size:12pt !important;\r\n  border-bottom:1px solid #ccc;\r\n  padding-top : 1em;\r\n  font-weight:bold;\r\n}\r\n.subheads{\r\n  border:none !important;\r\n  border-bottom:1px solid #ccc !important;\r\n}\r\n.topheads{\r\n  \r\n}\r\n.MuiToolbar-root{\r\n  \r\n}\r\n.account{\r\n  width: 100px;\r\n}\r\n.account_r{\r\n  width: 100px;\r\n  text-align:right;\r\n}\r\n.account_l{\r\n  width: 100px;\r\n  text-align:left;\r\n}\r\n.accounttitle{\r\n  width : 200px;\r\n  text-align:left;\r\n}\r\n.accountcode{\r\n  width: 65px;\r\n}\r\n.twocolumn{\r\n  width:200px;\r\n}\r\nth.account, th.accountcode,th.accounttitle,th.twocolumn {\r\n  border-bottom: 1px solid #ccc;\r\n  font-size: 10pt;\r\n  background: #e0e0e3;\r\n  height: 25px;\r\n  text-transform: uppercase;\r\n  padding-left: 2px;\r\n  border: 1px solid #00000014;\r\n  border-right: none;\r\n}\r\n\r\n.grouptotal{\r\n  font-size:10pt;\r\n  font-weight:bold;\r\n  --border-bottom:1px solid #ccc;\r\n  padding-top : 1em;\r\n  text-align:right;\r\n}\r\n.periodlist td{\r\n  border-left:1px solid #ccc;\r\n  border-bottom:1px solid #ccc;\r\n}\r\n.t-center{\r\n  text-align:center;\r\n}\r\n.width100{\r\n  width:100px;\r\n}\r\n.reporttitle{\r\n  font-size: 12pt;\r\n  padding-bottom : 1em;\r\n  font-weight:bold;\r\n}\r\n\r\n@media print {\r\n  \r\n  @Page{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: none;\r\n    background: none;\r\n\r\n    // margin: 0;\r\n    // padding: 0;\r\n    // border: none;\r\n    // background: none;\r\n    // transform: rotate(270deg) translate(-210mm, 0);\r\n    // transform-origin: 0 0;\r\n  }\r\n  body * {\r\n    visibility: hidden;\r\n  }\r\n  #section-to-print, #section-to-print * {\r\n    font-family: sans-serif;\r\n    visibility: visible;\r\n    font-size:6pt;\r\n  }\r\n  #section-to-print {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 10px;\r\n    padding:0;\r\n    padding-top:10px;\r\n    margin-top:10px;\r\n   \r\n  }\r\n  th.account, th.accountcode,th.accounttitle,th.twocolumn,td {\r\n        border-right: 1px solid #00000014;\r\n  }\r\n  .subheads{\r\n    font-size:8pt !important;\r\n  }\r\nh1{\r\n  font-size:8pt !important;\r\n}\r\n}\r\n`;\r\n\r\nconst CommentGrid = () => {\r\n  const { ids, data, basePath } = useListContext();\r\n  const types = [];\r\n  const heads = [];\r\n  const groupSubHeads = {};\r\n  const groupTypes = {};\r\n\r\n  ids.map((id) => {\r\n    var record = data[id];\r\n\r\n    groupTypes[record.ct_id] = { name: record.ct_title };\r\n    groupSubHeads[record.n_id] = {\r\n      head: record.ct_id,\r\n      headtitle: record.ct_title,\r\n      id: record.n_id,\r\n      name: record.n_title,\r\n    };\r\n  });\r\n\r\n  ids.map((id) => {\r\n    var record = data[id];\r\n    const subheads = groupSubHeads[record.n_id];\r\n    subheads.children = [...(subheads.children || []), record];\r\n  });\r\n\r\n  // Object.keys(groupSubHeads).map((key,index)=>{\r\n  //   console.log(key);\r\n  //   const subhead = groupSubHeads[key];\r\n  //   subhead.total_p_dr = subhead.children.reduce((debit_pr, item) => debit_pr + item.p_dr, 0);\r\n  //   subhead.total_p_cr = subhead.children.reduce((credit_pr, item) => credit_pr + item.p_dr, 0);\r\n  // });\r\nlet grand_total_opening_dr=0;\r\n let grand_total_opening_cr=0;\r\n let grand_total_current_dr=0;\r\n let grand_total_current_cr=0;\r\n let grand_total_closing_dr=0;\r\n let grand_total_closing_cr=0;\r\n\r\n  for (var index in groupSubHeads) {\r\n    const subhead = groupSubHeads[index];\r\n    let { children } = subhead;\r\n    subhead.total_p_dr = children.reduce(\r\n      (sum, item) => sum + ((item.p_dr && parseFloat(item.p_dr)) || 0),\r\n      0\r\n    );\r\n    subhead.total_p_cr = children.reduce(\r\n      (sum, item) => sum + ((item.p_cr && parseFloat(item.p_cr)) || 0),\r\n      0\r\n    );\r\n    subhead.total_pl_dr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.open_balance >= 0 && parseFloat(item.open_balance)) || 0),\r\n      0\r\n    );\r\n    subhead.total_pl_cr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.open_balance < 0 && parseFloat(item.open_balance)) || 0),\r\n      0\r\n    );\r\n\r\n    subhead.total_closing_dr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.close_balance >= 0 && parseFloat(item.close_balance)) || 0),\r\n      0\r\n    );\r\n\r\n    subhead.total_closing_cr = children.reduce(\r\n      (sum, item) =>\r\n        sum + ((item.close_balance < 0 && parseFloat(item.close_balance)) || 0),\r\n      0\r\n    );\r\n    grand_total_opening_dr +=subhead.total_p_dr;\r\n    grand_total_opening_cr +=subhead.total_p_cr;\r\n    grand_total_current_dr+=subhead.total_pl_dr;\r\n    grand_total_current_cr+=subhead.total_pl_cr;\r\n    grand_total_closing_dr +=subhead.total_closing_dr;\r\n    grand_total_closing_cr +=subhead.total_closing_cr; \r\n\r\n    const head = groupTypes[subhead.head];\r\n    console.log(head);\r\n    head.total_dr = (head.total_dr ||0) +subhead.total_closing_dr;\r\n    head.total_cr =(head.total_cr ||0)+ subhead.total_closing_cr;\r\n    head.children = [...(head.children || []), subhead];\r\n  }\r\n  console.log(\"grouptyes:\");\r\n  console.log(groupTypes);\r\n  let { records } = groupSubHeads;\r\n  return (\r\n    <html lang={\"en_US\"}>\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Trial Balance</title>\r\n        <style dangerouslySetInnerHTML={{ __html: styles }} />\r\n        <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n      </head>\r\n      <body id=\"section-to-print\">\r\n        <div  className=\"container-main\">\r\n        <table cellspacing=\"0\" width=\"100%\">\r\n        <thead>\r\n              <th align=\"center\" className=\"reporttitle\">Trial Balance Report</th>\r\n            </thead>\r\n         \r\n        </table>\r\n          \r\n          <table cellspacing=\"0\" width=\"100%\">\r\n            <thead>\r\n              <th className=\"account\">Account</th>\r\n              <th className=\"accountcode\">Account No.</th>\r\n              <th className=\"accounttitle\">Account Title</th>\r\n              <th colspan=\"2\" className=\"twocolumn\">\r\n                Opening Balance\r\n              </th>\r\n\r\n              <th colspan=\"2\" className=\"twocolumn\">\r\n                Current Period{\" \"}\r\n              </th>\r\n\r\n              <th colspan=\"2\" className=\"twocolumn\">\r\n                Closing{\" \"}\r\n              </th>\r\n            </thead>\r\n            <thead>\r\n              <th width=\"100px\"></th>\r\n              <th width=\"65px\"></th>\r\n              <th width=\"200px\"></th>\r\n              <th className=\"width100\">Debit</th>\r\n              <th className=\"width100\">Credit</th>\r\n              <th className=\"width100\">Debit</th>\r\n              <th className=\"width100\">Credit</th>\r\n              <th className=\"width100\">Debit</th>\r\n              <th className=\"width100\">Credit</th>\r\n            </thead>\r\n\r\n            {Object.keys(groupTypes).map((key, index) => {\r\n              const head = groupTypes[key];\r\n              return head.children.map((subhead) => {\r\n                return (\r\n                  <tr>\r\n                    <td colspan=\"9\">\r\n                      <table className=\"periodlist\" width=\"100%\">\r\n                        <tr>\r\n                          <td className=\"subheads\" colspan=\"9\">\r\n                            {subhead.name}\r\n                          </td>\r\n                        </tr>\r\n                        {subhead.children.map((account) => {\r\n                          return (\r\n                            <tr>\r\n                              <td className=\"account\" />\r\n                              <td className=\"accountcode\">\r\n                                {account.coa_code}\r\n                              </td>\r\n                              <td className=\"accounttitle\">\r\n                                {account.coa_title}\r\n                              </td>\r\n\r\n                              <td className=\"account_r\">\r\n                                {account.open_balance >= 0 &&\r\n                                  formatCurrency(account.open_balance)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {account.open_balance < 0 &&\r\n                                  formatCurrency(account.open_balance)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {formatCurrency(account.p_dr)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {formatCurrency(account.p_cr)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {account.close_balance >= 0 &&\r\n                                  formatCurrency(account.close_balance)}\r\n                              </td>\r\n                              <td className=\"account_r\">\r\n                                {account.close_balance < 0 &&\r\n                                  formatCurrency(account.close_balance)}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <td />\r\n                          <td />\r\n                          <td className=\"grouptotal\">Group Totals</td>\r\n\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_pl_dr)}\r\n                          </td>\r\n\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_pl_cr)}\r\n                          </td>\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_p_dr)}\r\n                          </td>\r\n                          <td className=\"grouptotal\">\r\n                            {formatCurrency(subhead.total_p_cr)}\r\n                          </td>\r\n                          <td className=\"grouptotal\">{formatCurrency(subhead.total_closing_dr)}</td>\r\n                          <td className=\"grouptotal\">{formatCurrency(subhead.total_closing_cr)}</td>\r\n                        </tr>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              });\r\n            })}\r\n          </table>\r\n        \r\n        \r\n          <table className=\"grandtotals\" cellspacing=\"0\" width=\"100%\">\r\n        <thead>\r\n              <th width=\"215px\" className=\"subheads\"></th>\r\n              <th width=\"65px\"></th>\r\n              <th width=\"200px\"></th>\r\n              <th className=\"width100 account_r\">Grand Opening Debit</th>\r\n              <th className=\"width100 account_r\">Grand Opening Credit</th>\r\n              <th className=\"width100 account_r\">Grand Current Period Debit</th>\r\n              <th className=\"width100 account_r\">Grand Current Period Credit</th>\r\n              <th className=\"width100 account_r\">Grand Closing Debit</th>\r\n              <th className=\"width100 account_r\">Grand Closing Credit</th>\r\n            </thead>\r\n          <tr className=\"accounttitle\">\r\n          <td colspan=\"3\" className=\"subheads account_r\">Grand Totals</td>\r\n            \r\n            <td className=\"account_r  grand\">{formatCurrency(grand_total_opening_dr)}</td>\r\n            <td className=\"account_r  grand\" >{formatCurrency(grand_total_opening_cr)}</td>\r\n            <td className=\"account_r  grand\">{formatCurrency(grand_total_current_dr)}</td>\r\n            <td className=\"account_r  grand\">{formatCurrency(grand_total_current_cr)}</td>\r\n            <td className=\"account_r  grand\">{formatCurrency(grand_total_closing_dr)}</td>\r\n            <td className=\"account_r  grand\">{formatCurrency(grand_total_closing_cr)}</td>\r\n          </tr>\r\n\r\n          {Object.keys(groupTypes).map((key, index) => {\r\n              const head = groupTypes[key];\r\n              console.log(\"head\"+ head.name);\r\n             return( <tr className=\"accounttitle\">\r\n              <td colspan=\"3\" className=\"subheads account_r\">{head.name}</td>\r\n                \r\n                <td className=\"account_r  grand\"></td>\r\n                <td className=\"account_r  grand\" ></td>\r\n                <td className=\"account_r  grand\"></td>\r\n                <td className=\"account_r  grand\"></td>\r\n                <td className=\"account_r  grand\">{formatCurrency(head.total_dr)}</td>\r\n                <td className=\"account_r  grand\">{formatCurrency(head.total_cr)}</td>\r\n              </tr>)\r\n          })}\r\n        </table>\r\n        </div>\r\n      </body>\r\n    </html>\r\n  );\r\n};\r\n\r\nexport const TrialBalanceList = (props) => (\r\n  <List pagination={false} {...props} filters={<TrialBalanceSearchFilter />}>\r\n    {<CommentGrid />}\r\n  </List>\r\n);\r\n\r\nexport default TrialBalanceList;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\settings\\setting.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\suppliers.js",["324"],"import { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport TransferWithinAStationIcon from '@material-ui/icons/TransferWithinAStation';\r\nimport * as React from \"react\";\r\nimport { BooleanField, BooleanInput, Create, Datagrid, DateField, DeleteButton, Edit, EditButton, Filter, FormTab, List, ListButton, ReferenceManyField, SearchInput, SimpleForm, SimpleList, TabbedForm, TextField, TextInput, TopToolbar } from 'react-admin';\r\nimport FirdousSelect from '../accounts/FirdousSelect';\r\n\r\nconst useStyles = makeStyles({\r\n  inlineBlock: { display: 'inline-flex', marginRight: '1rem' },\r\n});\r\n\r\nexport const SupplierActions = ({ basePath, data }) => (\r\n  <TopToolbar variant=\"contained\" >\r\n    <ListButton basePath={basePath} label=\"Back\" icon={<ChevronLeft />} variant=\"contained\" color=\"secondary\" />\r\n    {/* <ShowButton basePath={basePath} record={data} /> */}\r\n  </TopToolbar>\r\n);\r\n\r\nexport const SupplierIcon = TransferWithinAStationIcon;\r\n\r\nconst SupplierSearchFilter = (props) => (\r\n\r\n  <Filter {...props}>\r\n    <SearchInput variant=\"standard\" placeholder=\"Title\" source=\"title\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"SCode\" source=\"scode\" alwaysOn />\r\n    <SearchInput variant=\"standard\" placeholder=\"Code\" source=\"code\" alwaysOn />\r\n  </Filter>\r\n\r\n);\r\n\r\nexport const SupplierList = (props) => (\r\n  <List undoable={false} filters={<SupplierSearchFilter />} {...props} >\r\n\r\n    {useMediaQuery(theme => theme.breakpoints.down(\"sm\")) ? (\r\n      <SimpleList\r\n        primaryText={record => record.title}\r\n        secondaryText={record => `${record.code}`}\r\n        tertiaryText={record => record.id}\r\n\r\n      />\r\n    ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n          <TextField source=\"id\" />\r\n          <TextField source=\"code\" />\r\n          <TextField source=\"scode\" />\r\n          <TextField source=\"title\" />\r\n          <BooleanField source=\"active\" />\r\n          <TextField source=\"nature\" />\r\n          <EditButton variant=\"contained\" color=\"secondary\" />\r\n          <DeleteButton />\r\n        </Datagrid>)}\r\n  </List>\r\n);\r\n\r\nconst SupplierTitle = ({ record }) => {\r\n  return <span>Supplier {record ? `\"${record.title}\"` : ''}</span>;\r\n};\r\n\r\nexport const SupplierEdit = props => {\r\n  return (\r\n    <Edit undoable={false} title={<SupplierTitle />} {...props}>\r\n\r\n\r\n      <TabbedForm initialValues={{}}\r\n        variant={\"standard\"}\r\n        sanitizeEmptyValues={false}\r\n        margin=\"none\"\r\n        fullWidth\r\n      >\r\n        <FormTab label=\"Supplier Detail\">\r\n          <Grid container display=\"flex\" fullWidth spacing={1}>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput disabled source=\"id\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput disabled source=\"code\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"scode\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput multiline source=\"title\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"person\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"contact\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"address\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"country\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"city\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"email\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"fax\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"cnic\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"ntn\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"stn\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"businesstitle\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <TextInput source=\"nature\" fullWidth />\r\n            </Grid>\r\n            <Grid item xs={12} md={4} >\r\n        <FirdousSelect source=\"coa\" list=\"coa\" sort=\"title\" optionText=\"title\" fullWidth />\r\n        </Grid>\r\n            <Grid item xs={12} md={4}>\r\n              <BooleanInput source=\"active\" fullWidth />\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n        </FormTab>\r\n        <FormTab label=\"Purchase Orders\">\r\n          <ReferenceManyField\r\n            reference=\"purchaseorder\"\r\n            target=\"supplier_id\"\r\n            addLabel={false}\r\n            fullWidth\r\n          >\r\n            <Datagrid>\r\n              <TextField source=\"po_no\" />\r\n              <DateField source=\"purchase_date\" />\r\n              <TextField source=\"project_id\" />\r\n              <TextField source=\"status\" />\r\n              <DateField source=\"created_on\" />\r\n              <EditButton />\r\n            </Datagrid>\r\n          </ReferenceManyField>\r\n        </FormTab>\r\n      </TabbedForm>\r\n\r\n\r\n\r\n    </Edit>\r\n  )\r\n};\r\n\r\nexport const SupplierCreate = (props) => (\r\n  <Create title=\"New Suppier\" {...props}>\r\n    <SimpleForm\r\n      variant={\"standard\"}\r\n      sanitizeEmptyValues={false}\r\n      margin=\"none\"\r\n      fullWidth\r\n    >\r\n      <Grid container display=\"flex\" fullWidth spacing={1}>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput disabled source=\"id\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput  source=\"code\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"scode\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput multiline source=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"person\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"contact\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"address\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"country\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"city\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"email\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"fax\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"cnic\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"ntn\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"stn\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"businesstitle\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextInput source=\"nature\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4} >\r\n        <FirdousSelect source=\"coa\" list=\"coa\" sort=\"title\" optionText=\"title\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <BooleanInput source=\"active\" fullWidth />\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </SimpleForm>\r\n  </Create>\r\n\r\n);","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\providers\\basicAuth.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\schedule.js",["325","326","327","328"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\FirdousSelect.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\Logo.js",["329"],"import React, { Component } from 'react';\r\nimport image from './ds_circle_logo.png';\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"logo-main\">\r\n        <img width=\"40px\" alt=\"daily smarty ui image logo big\" src={image} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Logo;","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\Accounts.js",["330","331"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  JournalVoucher: {\r\n    backgroundColor: \"#64b5f6\",\r\n    color: \"white\",\r\n    hover: {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  PaymentVoucher: {\r\n    backgroundColor: \"#7b1fa2\",\r\n    color: \"white\",\r\n  },\r\n  SalesVoucher: {\r\n    backgroundColor: \"#aa00ff\",\r\n    color: \"white\",\r\n  },\r\n  RecieptVoucher: {\r\n    backgroundColor: \"#00897b\",\r\n    color: \"white\",\r\n  },\r\n  SalaryVoucher: {\r\n    backgroundColor: \"#ff5252\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container display=\"flex\" spacing={2}>\r\n      <Grid item xs={12} sm={3}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Vocuchers Menu\r\n        </Typography>\r\n        <Grid item xs={12}></Grid>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/transactions\"\r\n              label=\"Voucher Listing\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/coa\"\r\n              label=\"Chart of Accounts\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/notes\"\r\n              label=\"Account Heads\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/coa_type\"\r\n              label=\"Account Types\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n{/*           <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/deleted\"\r\n              label=\"Deleted Vouchers\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/invalidvou\"\r\n              label=\"Invalid Vouchers\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid> */}\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n        <Grid container spacing={2} direction=\"column\">\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Create Vocuchers\r\n            </Typography>\r\n            <AccountButton\r\n              target=\"/transactions/create?vou_type=1\"\r\n              label=\"Journal Voucher\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/transactions/create?vou_type=2\"\r\n              label=\"Payment Voucher\"\r\n              stylename={classes.PaymentVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/transactions/create?vou_type=4\"\r\n              label=\"Sales Voucher\"\r\n              stylename={classes.SalesVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/transactions/create?vou_type=3\"\r\n              label=\"Reciept Voucher\"\r\n              stylename={classes.RecieptVoucher}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/transactions/create?vou_type=5\"\r\n              label=\"Salary Voucher\"\r\n              stylename={classes.SalaryVoucher}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst Accounts = () => {\r\n  useAuthenticated();\r\n  const { loading, authenticated } = useAuthState();\r\n\r\n  return (\r\n    <Card>\r\n      <Title title=\"Accounts\" />\r\n      <CardContent>{SimplePaper()}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const AccountButton = (props) => {\r\n  return (\r\n    <Paper\r\n      className={props.stylename}\r\n      //style={{ minHeight: \"100px\" ,maxWidth:\"150px\"}}\r\n      variant=\"outlined\"\r\n      square\r\n    >\r\n      <CardActions>\r\n        <Button\r\n          className={props.stylename}\r\n          to={props.target}\r\n          component={Link}\r\n          size=\"large\"\r\n          color=\"primary\"\r\n        >\r\n          {props.label}\r\n        </Button>\r\n      </CardActions>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Accounts;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\PrintPOComponent.js",["332"],"import React, { Component } from \"react\";\r\nimport logo from \"../../assets/firdouslogo.png\";\r\nimport PurchaseOrder from \"./POPrint\";\r\n\r\nexport class PrintPOComponent extends Component {\r\n  render() {\r\n    const { record, loaded } = this.props;\r\n    if (record.id) {\r\n      console.log(logo);\r\n      return (\r\n        <div>\r\n          <PurchaseOrder\r\n            purchaseorder={{ ...record }}\r\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n            //customer={{}}\r\n            company={{\r\n              name: \"Firdous ERP\",\r\n              logoUrl: logo,\r\n            }}\r\n            notes={\"Here comes the Remarks\"}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PrintPOComponent;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\charts\\DummyChart.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\charts\\VouchersChart.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingShow.js",["333","334","335","336","337","338","339"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\ScheduleForm.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingConfirm.js",["359","360","361"],"import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as React from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { BookingsShow } from \"./booking\";\r\n\r\nexport class BookingPrint extends React.Component {\r\n  render() {\r\n    const { booking, schedule, step } = this.props;\r\n    return (\r\n      <div>\r\n        <ReactToPrint\r\n          trigger={() => {\r\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n            // to the root node of the returned component as it will be overwritten.\r\n            return <a href=\"#/accounts\">Print this out!</a>;\r\n          }}\r\n          content={() => this.componentRef}\r\n        />\r\n        <BookingConfirm\r\n          booking={booking}\r\n          schedule={schedule}\r\n          step={3}\r\n          ref={(el) => (this.componentRef = el)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class BookingConfirm extends React.Component {\r\n  continue = (e) => {\r\n    e.preventDefault();\r\n    //PROCESS FORM //\r\n    this.props.nextStep();\r\n  };\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { booking, schedule, step } = this.props;\r\n    // const classes = useStyles();\r\n\r\n    if (step == 3) {\r\n      return (\r\n        <Card>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Booking Confirmation\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"right\">\r\n                  <BookingPrint />\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} container alignContent=\"flex-end\">\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Booking Details\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <div>&nbsp;</div>\r\n            <Grid container display=\"flex\" spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Date : {booking.book_date && new Date(booking.book_date).toLocaleDateString()}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  ID: {} {booking.id}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Code: {booking.code}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Scode: {booking.scode}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Title: {booking.title}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Unit: {booking.unit}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Client: {booking.client}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Project: {booking.project}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Sale Price: {booking.sale_price}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Discount : {booking.discount}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Active : {booking.active}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Remarks : {booking.remarks}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Name : {booking.name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Father's Name : {booking.father_name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Residential Address : {booking.residential_address}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Phone Number : {booking.phone_no}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Occupation : {booking.occupation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Nationality : {booking.nationality}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  CNIC : {booking.cnic}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Reference Of : {booking.reference_off}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Nominee's Name : {booking.nominee_name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Realtion : {booking.relation}\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Email : {booking.email}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Schedule Confirmation\r\n                </Typography>\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  ID : {schedule.id}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Name : {schedule.name}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Date: {new Date(schedule.date).toLocaleDateString()}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Unit :{schedule.unit}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Type : {schedule.type}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  floor : {schedule.floor}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  block : {schedule.block}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Contact : {schedule.contact}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  total Cost : {schedule.total_cost}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Booking : {schedule.on_booking}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Allocation: {schedule.on_allocation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Confirmation : {schedule.on_confirmation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Monthly Installment : {schedule.monthly_installment}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Start : {schedule.on_start}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  Quaterly Payment : {schedule.quaterly_payment}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Excavation : {schedule.on_excavation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Foundaiton : {schedule.on_foundation}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Slab : {schedule.on_slab}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Block : {schedule.on_block}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Plaster : {schedule.on_plaster}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Plumbing :{schedule.on_plumbing}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Coloring : {schedule.on_coloring}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Finishing: {schedule.on_finishing}\r\n                </Typography>\r\n\r\n                <Typography variant=\"h6\" gutterBottom align=\"left\">\r\n                  On Possesion : {schedule.on_posession}\r\n                </Typography>\r\n               \r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nexport default BookingConfirm;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingDetailsForm.js",["362","363","364","365","366"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\POPrint.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\VoucherShow.js",["367","368","369","370","371"],"import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useShowController } from \"react-admin\";\r\nimport Voucher from \"./VoucherPrint\";\r\n\r\nconst VoucherShow = (props) => {\r\n  const {\r\n    basePath, // deduced from the location, useful for action buttons\r\n    defaultTitle, // the translated title based on the resource, e.g. 'Post #123'\r\n    loaded, // boolean that is false until the record is available\r\n    loading, // boolean that is true on mount, and false once the record was fetched\r\n    record, // record fetched via dataProvider.getOne() based on the id from the location\r\n    resource, // the resource name, deduced from the location. e.g. 'posts'\r\n    version, // integer used by the refresh feature\r\n  } = useShowController(props);\r\n  console.log(record);\r\n  if (!loaded) {\r\n    return <CircularProgress />;\r\n  }\r\n  return (\r\n    <Voucher\r\n      voucher={{ ...record }}\r\n      // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n      //customer={{}}\r\n      company={{ name: \"Firdous ERP\", logoUrl: \"%PUBLIC_URL%/firdouslogo.png\" }}\r\n      notes={\"Here comes the Remarks\"}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VoucherShow;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\Reports.js",["372","373"],"import { Grid, Typography } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as React from \"react\";\r\nimport { Title, useAuthenticated, useAuthState } from \"react-admin\";\r\nimport { AccountButton } from \"../accounts/Accounts\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: theme.spacing(16),\r\n      height: theme.spacing(16),\r\n    },\r\n  },\r\n  JournalVoucher: {\r\n    backgroundColor: \"#64b5f6\",\r\n    color: \"white\",\r\n    hover: {\r\n      color: \"red\",\r\n    },\r\n  },\r\n  PaymentVoucher: {\r\n    backgroundColor: \"#7b1fa2\",\r\n    color: \"white\",\r\n  },\r\n  SalesVoucher: {\r\n    backgroundColor: \"#aa00ff\",\r\n    color: \"white\",\r\n  },\r\n  RecieptVoucher: {\r\n    backgroundColor: \"#00897b\",\r\n    color: \"white\",\r\n  },\r\n  SalaryVoucher: {\r\n    backgroundColor: \"#ff5252\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction SimplePaper() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container display=\"flex\" spacing={2}>\r\n      <Grid item xs={12} sm={3}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Reports Menu\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/reports/accountledger\"\r\n              label=\"Acccount Ledgers\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/reports/projectledger\"\r\n              label=\"Project Ledger\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/reports/trialbalance\"\r\n              label=\"Trial Balance\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <AccountButton\r\n              target=\"/reports/trialbalanceconsolidated\"\r\n              label=\"Trial Balance Consolidated\"\r\n              stylename={classes.JournalVoucher}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nconst Reports = () => {\r\n  useAuthenticated();\r\n  const { loading, authenticated } = useAuthState();\r\n\r\n  return (\r\n    <Card>\r\n      <Title title=\"Reports\" />\r\n      <CardContent>{SimplePaper()}</CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Reports;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\VoucherEntry3.js",["374","375","376","377","378"],"import { Box, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport * as React from \"react\";\r\nimport {\r\n  ArrayInput,\r\n  Button,\r\n  DateInput,\r\n  DeleteButton,\r\n  ListButton,\r\n  NumberInput,\r\n  required,\r\n  SaveButton,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput,\r\n  Toolbar,\r\n} from \"react-admin\";\r\nimport { useFormState } from \"react-final-form\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport FirdousSelect from \"./FirdousSelect\";\r\nimport PrintVoucherComponent from \"./PrintVoucherComponent\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  inlineBlock: { display: \"inline-flex\", marginRight: \"1em\", width: \"40%\" },\r\n  iteratorinput: { marginRight: \"0.5em\", width: \"30%\" },\r\n\r\n  width20: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"20%\",\r\n    },\r\n  },\r\n  width25: { marginRight: \"0.5em\", width: \"25%\" },\r\n  width30: { marginRight: \"0.5em\", width: \"30%\" },\r\n  width35: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"35%\",\r\n    },\r\n  },\r\n  formBox: {\r\n    display: \"flex\",\r\n    //flexGrow: \"2\",\r\n    width: \"100%\",\r\n  },\r\n  width40: { marginRight: \"0.5em\", width: \"40%\" },\r\n  width50: { marginRight: \"0.5em\", width: \"62%\" },\r\n  alightRight: { marginRight: \"0.5em\", width: \"20%\" },\r\n\r\n  maxFixedWidth: { maxWidth: \"180px\", boxSizing: \"border-box\" },\r\n  fixedWidth: { width: \"180px\" },\r\n  BorderandBackgroundIter: {\r\n    border: \"1px solid #ccc\",\r\n    padding: \"1em\",\r\n  },\r\n  VoucherEntry: {\r\n    border: \"1px solid #ccc\",\r\n    minWidth: \"870px\",\r\n    maxWidth: \"1000px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  BorderandBackground: {\r\n    //border: \"1px solid #ccc\",\r\n    //backgroundColor: \"#1976d20f\",\r\n    margin: \"2px\",\r\n    fontWeight: \"bold\",\r\n    MuiFormHelperText: {\r\n      contained: {\r\n        display: \"none\",\r\n      },\r\n      marginDense: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    MuiFormControl: {\r\n      root: { border: \"1px solid #ccc\" },\r\n    },\r\n\r\n    MuiFilledInput: {\r\n      root: { backgroundColor: \"#1976d20f\" },\r\n    },\r\n  },\r\n});\r\n\r\nconst validateVoucherCreation = (values) => {\r\n  const errors = {};\r\n  console.log(\"values:\" + JSON.stringify(values));\r\n  if (values.vou_type == 5 && !values.employee) {\r\n    errors.employee = [\"The Employee is required\"];\r\n  }\r\n\r\n  if (!values.transactions || values.transactions.length == 0) {\r\n    errors.total_debit = [\"Please Enter the Transactions\"];\r\n  } else {\r\n    values.transactions.map((transaction) => {\r\n      (!transaction &&\r\n        (errors.total_debit = [\"Please Enter the Transactions\"])) ||\r\n        (!transaction.coa &&\r\n          (errors.total_debit = [\"Please select transaction account\"])) ||\r\n        ((!transaction.dr || transaction.dr === 0) &&\r\n          (!transaction.cr || transaction.cr === 0) &&\r\n          (errors.total_debit = [\r\n            \"Debit and Credit of a transaction cant be Zero\",\r\n          ]));\r\n    });\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst ra_required = [required()];\r\nconst dateFormatter = (v) => {\r\n  // v is a `Date` object\r\n  if (!(v instanceof Date) || isNaN(v)) return;\r\n  const pad = \"00\";\r\n  const yy = v.getFullYear().toString();\r\n  const mm = (v.getMonth() + 1).toString();\r\n  const dd = v.getDate().toString();\r\n  return `${yy}-${(pad + mm).slice(-2)}-${(pad + dd).slice(-2)}`;\r\n};\r\n\r\nconst dateParser = (v) => {\r\n  // v is a string of \"YYYY-MM-DD\" format\r\n  const match = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(v);\r\n  if (match === null) return;\r\n  const d = new Date(match[1], parseInt(match[2], 10) - 1, match[3]);\r\n  if (isNaN(d)) return;\r\n  return d;\r\n};\r\nexport const VoucherEntryForm = ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const initial = [\r\n    { coa: \"\", dr: 0, cr: 0 },\r\n    { coa: \"\", dr: 0, cr: 0 },\r\n  ];\r\n\r\n  const vou_types = [\r\n    { id: 1, title: \"Journal Voucher\" },\r\n    { id: 2, title: \"Payment Voucher\" },\r\n    { id: 3, title: \"Reciept Voucher\" },\r\n    { id: 4, title: \"Sales Voucher\" },\r\n    { id: 5, title: \"Salary Voucher\" },\r\n    { id: 6, title: \"Inventory Voucher\" },\r\n  ];\r\n  const optionRenderer = (choice) => {\r\n    return choice && ` ${choice.title} ${choice.scode || \"\"}  ${choice.code}`;\r\n  };\r\n\r\n  const calculateSum = (values, source, field) => {\r\n    let sum = 0;\r\n    if (values && values.transactions) {\r\n      values.transactions.map(\r\n        (transaction) =>\r\n          transaction &&\r\n          (sum = parseFloat(sum || 0) + parseFloat(transaction[field] || 0))\r\n      );\r\n      values[source] = parseFloat(sum || 0);\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  const TotalInput = (props) => {\r\n    const { values } = useFormState();\r\n    return (\r\n      <NumberInput\r\n        disabled\r\n        variant=\"standard\"\r\n        source={parseFloat(props.source || 0)}\r\n        value={calculateSum(values, props.source, props.field)}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n\r\n  const CustomToolbar = (props) => {\r\n    const componentRef = React.useRef();\r\n    return (\r\n      <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <SaveButton undoable={false} {...props} />\r\n          </Grid>\r\n          <Grid item>\r\n            <ListButton\r\n              basePath={props.basePath}\r\n              label=\"Back\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              icon={<ChevronLeft />}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <ReactToPrint\r\n              trigger={() => {\r\n                // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n                // to the root node of the returned component as it will be overwritten.\r\n                return (\r\n                  <Button\r\n                    disabled={!props.record.id}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    label=\"Print\"\r\n                    size=\"medium\"\r\n                    icon={<PrintIcon />}\r\n                  />\r\n                );\r\n              }}\r\n              content={() => componentRef.current}\r\n            />\r\n            <div style={{ display: \"none\" }}>\r\n              {console.log(props)}\r\n              <PrintVoucherComponent ref={componentRef} {...props} />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <DeleteButton undoable={false} />\r\n      </Toolbar>\r\n    );\r\n  };\r\n  return (\r\n    <SimpleForm\r\n      toolbar={<CustomToolbar />}\r\n      className={classes.VoucherEntry}\r\n      validate={validateVoucherCreation}\r\n      fullWidth\r\n      subscription={{}}\r\n      {...props}\r\n    >\r\n      <Grid container fullWidth spacing={1} display=\"flex\">\r\n        <Grid pr={8} item xs={12} sm={4} md={3}>\r\n          <SelectInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Voucher Type\"\r\n            source=\"vou_type\"\r\n            initialValue={props.vou_type}\r\n            optionText=\"title\"\r\n            optionValue=\"id\"\r\n            choices={vou_types}\r\n            validate={ra_required}\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <TextInput\r\n            margin=\"none\"\r\n            disabled\r\n            source=\"vou_no\"\r\n            //    resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <DateInput\r\n            //initialValue={new Date().toLocaleDateString()}\r\n            initialValue={new Date().toISOString().substring(0, 10)}\r\n            margin=\"none\"\r\n            variant=\"outlined\"\r\n            source=\"vou_date\"\r\n            //resource=\"vouchers\"\r\n            validate={ra_required}\r\n            autoFocus\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Chq.no\"\r\n            source=\"chq_no\"\r\n            //resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <DateInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Chq.date\"\r\n            source=\"chq_date\"\r\n            resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            source=\"remarks\"\r\n            //resource=\"vouchers\"\r\n            //validate={ra_required}\r\n            multiline\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box className={classes.formBox}>\r\n            <ArrayInput\r\n              initialValue={initial}\r\n              variant=\"outlined\"\r\n              source=\"transactions\"\r\n              label=\"Transactions\"\r\n              fullWidth\r\n              className={classes.BorderandBackgroundIter}\r\n              subscription={{}}\r\n              marginTop=\"none\"\r\n            >\r\n              <SimpleFormIterator fullWidth>\r\n                <FirdousSelect\r\n                  resettable\r\n                  label=\"Account\"\r\n                  list=\"coa\"\r\n                  source=\"coa\"\r\n                  sort=\"code\"\r\n                  optionText={optionRenderer}\r\n                  //validate={ra_required}\r\n                  //initialValue={1}\r\n                  //resource=\"vouchers\"\r\n                  fullWidth\r\n                  formClassName={classes.width35}\r\n                  className={classes.BorderandBackground}\r\n                  // margin=\"none\"\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  label=\"Project\"\r\n                  source=\"project\"\r\n                  optionText=\"title\"\r\n                  list=\"projects\"\r\n                  sort=\"title\"\r\n                  validate={ra_required}\r\n                  fullWidth\r\n                  initialValue={1}\r\n                  formClassName={classes.width20}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                <NumberInput\r\n                  //formClassName={classes.iteratorinput50}\r\n                  //className={classes.fixedWidth}\r\n                  label=\"Debit\"\r\n                  source=\"dr\"\r\n                  // resource=\"vouchers\"\r\n                  //validate={ra_required}\r\n\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                  fullWidth\r\n                />\r\n\r\n                <NumberInput\r\n                  //className={classes.fixedWidth}\r\n                  label=\"Credit\"\r\n                  source=\"cr\"\r\n                  //resource=\"vouchers\"\r\n                  //validate={ra_required}\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                  fullWidth\r\n                />\r\n                <TextInput\r\n                  margin=\"none\"\r\n                  label=\"RefNo.\"\r\n                  source=\"refno\"\r\n                  //resource=\"vouchers\"\r\n                  fullWidth\r\n                  formClassName={classes.width35}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                <TextInput\r\n                  variant=\"outlined\"\r\n                  margin=\"none\"\r\n                  source=\"description\"\r\n                  //resource=\"vouchers\"\r\n                  label=\"Description\"\r\n                  validate={ra_required}\r\n                  multiline\r\n                  fullWidth\r\n                  formClassName={classes.width50}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Vendor\"\r\n                  list=\"suppliers\"\r\n                  sort=\"title\"\r\n                  source=\"supplier\"\r\n                  optionText=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width35}\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Unit\"\r\n                  source=\"unit\"\r\n                  optionText=\"title\"\r\n                  list=\"units\"\r\n                  sort=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Stock\"\r\n                  source=\"stock\"\r\n                  optionText=\"title\"\r\n                  list=\"stock\"\r\n                  sort=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                />\r\n\r\n                <FirdousSelect\r\n                  margin=\"none\"\r\n                  allowEmpty\r\n                  label=\"Employee\"\r\n                  source=\"employee\"\r\n                  optionText=\"title\"\r\n                  list=\"employees\"\r\n                  sort=\"title\"\r\n                  fullWidth\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width20}\r\n                  //className={classes.maxFixedWidth}\r\n                />\r\n\r\n                {/* <TextInput formClassName={classes.inlineBlock} label =\"Description\" source=\"description\" resource=\"vouchers\" multiline fullWidth margin=\"none\"/> */}\r\n              </SimpleFormIterator>\r\n            </ArrayInput>\r\n          </Box>\r\n          <Grid container display=\"flex\" fullWidth>\r\n            {/* <Grid item xs=\"6\" align=\"right\">\r\n              <TextInput\r\n                margin=\"none\"\r\n                label=\"Remarks\"\r\n                source=\"remarks\"\r\n                //resource=\"vouchers\"\r\n                multiline\r\n                fullWidth\r\n                className={classes.BorderandBackground}\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs=\"12\" align=\"right\">\r\n              <TotalInput\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                source=\"total_debit\"\r\n                field=\"dr\"\r\n              />\r\n              <TotalInput\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                source=\"total_credit\"\r\n                field=\"cr\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </SimpleForm>\r\n  );\r\n};\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\reports\\Accountbalances.js",["379","380"],"import { CircularProgress, Toolbar } from \"@material-ui/core\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Error, useQueryWithStore } from \"react-admin\";\r\nimport ReactToPrint from \"react-to-print\";\r\nexport function formatCurrency(amount) {\r\n  return Number.parseFloat(amount).toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n\r\n}\r\nconst styles = `\r\n.invoice-box{\r\n  margin-left:2em;\r\n  margin-right:2em;\r\n  max-width:1000px;\r\n  border:1px solid #ccc;\r\n  box-shadow:0 0 10px rgba(0, 0, 0, .15);\r\n  color:#555;\r\n}\r\n.heading{\r\n    text-align:center;\r\n    font-weight:bold;\r\n    font-size: \"120%\";\r\n}\r\n.debit, .credit, .balance{\r\n    width: 150px;\r\n    padding: 10px;\r\n    text-align:right;\r\n    border-bottom: 1px solid #ddd;\r\n}\r\nthead td,tfoot td{\r\n    font-weight:bold;\r\n    text-align: left;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 10px;\r\n}\r\n.account{\r\n  font-weight:bold;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 10px;\r\n}\r\n@media print {\r\n  .invoice-box{\r\n    box-shadow: none;\r\n    border: 0;\r\n    page-break-before: always;\r\n  }\r\n\r\n}\r\n@page {\r\n  size: auto;\r\n  margin-top: 10mm;\r\n  margin-bottom: 10mm;\r\n}\r\n`;\r\n\r\n\r\n\r\nexport class PrintAccountBalanceComponent extends Component {\r\n  render() {\r\n    return (\r\n      <AccountBalanceReport />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const AccountBalanceReport = () => {\r\n  const componentRef = React.useRef();\r\n  const { data, loaded, error } = useQueryWithStore({\r\n    type: \"getList\",\r\n    resource: \"reports/accbal\",\r\n    payload: {\r\n      pagination: { page: 1, perPage: 500 },\r\n      sort: { field: \"coa.code\", order: \"ASC\" },\r\n      filter: {},\r\n    },\r\n  });\r\n\r\n  if (!loaded) {\r\n    return <CircularProgress />;\r\n  }\r\n  if (error) {\r\n    return <Error />;\r\n  }\r\n  if (!data) {\r\n    console.log(\"return null\");\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    accountbalances(data))\r\n}\r\nconst accountbalances = (records) => {\r\n  console.log(\"records:\" + JSON.stringify(records));\r\n  let sum_debit = 0.00;\r\n  let sum_credit = 0.00;\r\n  return (\r\n    <div>\r\n      <html lang={\"en_US\"}>\r\n        <head>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>{/* {company.name} {POName} */}</title>\r\n          <style dangerouslySetInnerHTML={{ __html: styles }} />\r\n          <meta name=\"robots\" content=\"noindex, nofollow\" />\r\n        </head>\r\n        <body>\r\n\r\n          <div className=\"invoice-box\">\r\n            <table width=\"100%\" cellPadding=\"0\" cellSpacing=\"0\">\r\n\r\n              <thead>\r\n                <td>Account Name</td>\r\n                <td className=\"debit\">Debit</td>\r\n                <td className=\"credit\">Credit</td>\r\n                <td className=\"balance\">Balance</td>\r\n              </thead>\r\n              <tbody>\r\n                {records.map((record) => {\r\n                  sum_debit = sum_debit + parseFloat(record.debit || 0);\r\n                  sum_credit = sum_credit + parseFloat(record.credit || 0);\r\n                  if (record.id) {\r\n                    return (\r\n                      <tr>\r\n                        <td className=\"account\">{record.title}</td>\r\n                        <td className=\"debit\">{formatCurrency(record.debit)}</td>\r\n                        <td className=\"credit\">{formatCurrency(record.credit)}</td>\r\n                        <td className=\"balance\">{formatCurrency(record.balance)}</td>\r\n                      </tr>\r\n                    );\r\n                  }\r\n                })}\r\n              </tbody>\r\n              <tfoot>\r\n                <tr>\r\n\r\n                  <td className=\"account\">Totals</td>\r\n\r\n                  <td className=\"debit\">{formatCurrency(sum_debit)}</td>\r\n                  <td className=\"credit\">{formatCurrency(sum_credit)}</td>\r\n                  <td></td>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </div>\r\n        </body>\r\n      </html>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AccountBalancePrintable = () => {\r\n  const componentRef = React.useRef();\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar style={{ justifyContent: \"spance-between\" }}>\r\n        <h1 style={{ paddingRight: \"15px\" }}> Account Balance (Trial)</h1>\r\n        <ReactToPrint\r\n          trigger={() => {\r\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n            // to the root node of the returned component as it will be overwritten.\r\n            return (\r\n              <Button\r\n\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                label=\"Print\"\r\n                size=\"medium\"\r\n                icon={<PrintIcon />}\r\n              />\r\n            );\r\n          }}\r\n          content={() => componentRef.current}\r\n        />\r\n\r\n      </Toolbar>\r\n      <div>\r\n        <PrintAccountBalanceComponent ref={componentRef} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default AccountBalancePrintable;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\purchases\\Purchases.js",["381","382"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\vouchers\\TransactionEntryForm.js",["383","384","385","386"],"import { Box, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport * as React from \"react\";\r\nimport {\r\n  ArrayInput,\r\n  Button,\r\n  DateInput,\r\n  DeleteButton,\r\n  ListButton,\r\n  NumberInput,\r\n  required,\r\n  SaveButton,\r\n  SelectInput,\r\n  SimpleForm,\r\n  SimpleFormIterator,\r\n  TextInput,\r\n  Toolbar\r\n} from \"react-admin\";\r\nimport { useFormState } from \"react-final-form\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport FirdousSelect from \"../FirdousSelect\";\r\nimport PrintVoucherComponent from \"../PrintVoucherComponent\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  inlineBlock: { display: \"inline-flex\", marginRight: \"1em\", width: \"40%\" },\r\n  iteratorinput: { marginRight: \"0.5em\", width: \"30%\" },\r\n\r\n  width20: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"20%\",\r\n    },\r\n  },\r\n  width12: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"12%\",\r\n    },\r\n  },\r\n  width25: { marginRight: \"0.5em\", width: \"25%\" },\r\n  width30: { marginRight: \"0.5em\", width: \"30%\" },\r\n  width35: {\r\n    \"@media (min-width: 600px)\": {\r\n      marginRight: \"0.5em\",\r\n      width: \"35%\",\r\n    },\r\n  },\r\n  formBox: {\r\n    display: \"flex\",\r\n    //flexGrow: \"2\",\r\n    width: \"100%\",\r\n  },\r\n  width40: { marginRight: \"0.5em\", width: \"40%\" },\r\n  width45: { marginRight: \"0.5em\", width: \"46%\" },\r\n  width50: { marginRight: \"0.5em\", width: \"62%\" },\r\n  alightRight: { marginRight: \"0.5em\", width: \"20%\" },\r\n\r\n  maxFixedWidth: { maxWidth: \"180px\", boxSizing: \"border-box\" },\r\n  fixedWidth: { width: \"180px\" },\r\n  BorderandBackgroundIter: {\r\n    border: \"1px solid #ccc\",\r\n    padding: \"1em\",\r\n  },\r\n  VoucherEntry: {\r\n    border: \"1px solid #ccc\",\r\n    minWidth: \"870px\",\r\n    maxWidth: \"1200px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  BorderandBackground: {\r\n    //border: \"1px solid #ccc\",\r\n    //backgroundColor: \"#1976d20f\",\r\n    margin: \"2px\",\r\n    fontWeight: \"bold\",\r\n    MuiFormHelperText: {\r\n      contained: {\r\n        // display: \"none\",\r\n      },\r\n      marginDense: {\r\n        // display: \"none\",\r\n      },\r\n    },\r\n    MuiFormControl: {\r\n      root: { border: \"1px solid #ccc\" },\r\n    },\r\n\r\n    MuiFilledInput: {\r\n      root: { backgroundColor: \"#1976d20f\" },\r\n    },\r\n  },\r\n});\r\n\r\nconst validateVoucherCreation = (values) => {\r\n  const errors = {};\r\n  console.log(\"values:\" + JSON.stringify(values));\r\n  console.log(\r\n    parseFloat(values.total_debit) != parseFloat(values.total_credit)\r\n  );\r\n  console.log(\r\n    parseFloat(values.total_debit) + \" and \" + parseFloat(values.total_credit)\r\n  );\r\n  if (parseFloat(values.total_debit) != parseFloat(values.total_credit)) {\r\n    errors.total_debit = [\"debit != credit\"];\r\n    errors.total_credit = [\"debit != credit\"];\r\n    console.log(\"debit!=credit\");\r\n  }\r\n\r\n  if (values.vou_no && values.vou_date) {\r\n    let year_month = values.vou_no.substring(2, 6);\r\n    let date_year_month = values.vou_date.substring(2, 7).replace(\"-\", \"\");\r\n\r\n    console.log(year_month);\r\n    console.log(date_year_month);\r\n\r\n    if (year_month != date_year_month) {\r\n      errors.vou_date = [\r\n        \"Date can only be changed within voucher month and year\",\r\n      ];\r\n    }\r\n  }\r\n\r\n  if (!values.transactions || values.transactions.length < 2) {\r\n    errors.total_debit = [\"Please Enter the Transactions\"];\r\n    errors.total_credit = [\"Please Enter the Transactions\"];\r\n    console.log(\"transactions less then required\");\r\n  } else {\r\n    values.transactions.map((transaction) => {\r\n      (!transaction &&\r\n        (errors.total_debit = [\"Please Enter the Transactions\"])) ||\r\n        (!transaction.coa &&\r\n          (errors.total_debit = [\"Please select transaction account\"])) ||\r\n        ((!transaction.dr || transaction.dr === 0) &&\r\n          (!transaction.cr || transaction.cr === 0) &&\r\n          (errors.total_debit = [\r\n            \"Debit and Credit of a transaction cant be Zero\",\r\n          ]));\r\n    });\r\n  }\r\n  console.log(JSON.stringify(errors));\r\n  return errors;\r\n};\r\n\r\nconst ra_required = [required()];\r\n\r\nexport const TransactionEntryForm = ({ ...props }) => {\r\n  const classes = useStyles();\r\n  const initial = [\r\n    { coa: \"\", dr: 0, cr: 0 },\r\n    { coa: \"\", dr: 0, cr: 0 },\r\n  ];\r\n\r\n  const vou_types = [\r\n    { id: 1, title: \"Journal Voucher\" },\r\n    { id: 2, title: \"Payment Voucher\" },\r\n    { id: 3, title: \"Reciept Voucher\" },\r\n    { id: 4, title: \"Sales Voucher\" },\r\n    { id: 5, title: \"Salary Voucher\" },\r\n    { id: 6, title: \"Inventory Voucher\" },\r\n  ];\r\n  const optionRenderer = (choice) => {\r\n    return choice && ` ${choice.title} ${choice.scode || \"\"}  ${choice.code}`;\r\n  };\r\n\r\n  const calculateSum = (values, source, field) => {\r\n    let sum = 0;\r\n    if (values && values.transactions) {\r\n      values.transactions.map(\r\n        (transaction) =>\r\n          transaction &&\r\n          (sum = parseFloat(sum || 0) + parseFloat(transaction[field] || 0))\r\n      );\r\n      values[source] = parseFloat(sum || 0);\r\n    }\r\n    return sum;\r\n  };\r\n\r\n  const TotalInput = (props) => {\r\n    const { values } = useFormState();\r\n    return (\r\n      <NumberInput\r\n        disabled\r\n        variant=\"standard\"\r\n        source={parseFloat(props.source || 0)}\r\n        value={calculateSum(values, props.source, props.field)}\r\n        {...props}\r\n      />\r\n    );\r\n  };\r\n  const jwt = JSON.parse(localStorage.getItem(\"jwtToken\"));\r\n  const CustomToolbar = (props) => {\r\n    const componentRef = React.useRef();\r\n\r\n    return (\r\n      <Toolbar alwaysEnableSaveButton {...props} classes={useStyles()}>\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <SaveButton undoable={false} {...props} />\r\n          </Grid>\r\n          <Grid item>\r\n            <ListButton\r\n              basePath={props.basePath}\r\n              label=\"Back\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              icon={<ChevronLeft />}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <ReactToPrint\r\n              trigger={() => {\r\n                // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n                // to the root node of the returned component as it will be overwritten.\r\n                return (\r\n                  <Button\r\n                    disabled={!props.record.id}\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    label=\"Print\"\r\n                    size=\"medium\"\r\n                    icon={<PrintIcon />}\r\n                  />\r\n                );\r\n              }}\r\n              content={() => componentRef.current}\r\n            />\r\n            <div style={{ display: \"none\" }}>\r\n              {console.log(props)}\r\n              <PrintVoucherComponent ref={componentRef} {...props} />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <DeleteButton undoable={false} />\r\n      </Toolbar>\r\n    );\r\n  };\r\n  return (\r\n    <SimpleForm\r\n      toolbar={<CustomToolbar />}\r\n      className={classes.VoucherEntry}\r\n      validate={validateVoucherCreation}\r\n      fullWidth\r\n      validateOnBlur\r\n      subscription={{ dirtyFields: true }}\r\n      {...props}\r\n    >\r\n      <Grid container fullWidth spacing={1} display=\"flex\">\r\n        <Grid pr={8} item xs={12} sm={4} md={3}>\r\n          <SelectInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Voucher Type\"\r\n            source=\"vou_type\"\r\n            initialValue={props.vou_type || 1}\r\n            optionText=\"title\"\r\n            optionValue=\"id\"\r\n            choices={vou_types}\r\n            validate={ra_required}\r\n            fullWidth\r\n            disabled\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <TextInput\r\n            margin=\"none\"\r\n            disabled\r\n            source=\"vou_no\"\r\n            //    resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n            variant=\"outlined\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <DateInput\r\n            //initialValue={new Date().toLocaleDateString()}\r\n            initialValue={new Date().toISOString().substring(0, 10)}\r\n            margin=\"none\"\r\n            variant=\"outlined\"\r\n            source=\"vou_date\"\r\n            //resource=\"vouchers\"\r\n            validate={ra_required}\r\n            autoFocus\r\n            pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <FirdousSelect\r\n            margin=\"none\"\r\n            label=\"Project\"\r\n            source=\"project\"\r\n            optionText=\"title\"\r\n            list=\"projects\"\r\n            sort=\"title\"\r\n            filter={{ id: jwt.project.id }}\r\n            validate={ra_required}\r\n            fullWidth\r\n            initialValue={jwt && jwt.project.id}\r\n            formClassName={classes.width20}\r\n            className={classes.BorderandBackground}\r\n            disabled\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            source=\"description\"\r\n            //resource=\"vouchers\"\r\n            label=\"Description\"\r\n            validate={ra_required}\r\n            multiline\r\n            fullWidth\r\n            formClassName={classes.width50}\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Chq.no\"\r\n            source=\"chq_no\"\r\n            //resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={4}>\r\n          <DateInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            label=\"Chq.date\"\r\n            source=\"chq_date\"\r\n            resource=\"vouchers\"\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={3}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            className={classes.mr1}\r\n            initialValue={jwt && jwt.username}\r\n            disabled\r\n            source=\"created_by\"\r\n          />\r\n        </Grid>\r\n        {/*    <Grid item xs={12} sm={8}>\r\n          <TextInput\r\n            variant=\"outlined\"\r\n            margin=\"none\"\r\n            source=\"remarks\"\r\n            //resource=\"vouchers\"\r\n            //validate={ra_required}\r\n            multiline\r\n            fullWidth\r\n            className={classes.BorderandBackground}\r\n          />\r\n        </Grid> */}\r\n\r\n        <Grid item xs={12}>\r\n          <Box className={classes.formBox}>\r\n            <ArrayInput\r\n              initialValue={initial}\r\n              variant=\"outlined\"\r\n              source=\"transactions\"\r\n              label=\"Transactions\"\r\n              fullWidth\r\n              className={classes.BorderandBackgroundIter}\r\n              subscription={{ dirtyFields: true }}\r\n              marginTop=\"none\"\r\n            >\r\n              <SimpleFormIterator fullWidth>\r\n                <FirdousSelect\r\n                  resettable\r\n                  label=\"Account\"\r\n                  list=\"coa\"\r\n                  source=\"coa\"\r\n                  sort=\"code\"\r\n                  optionText={optionRenderer}\r\n                  validate={ra_required}\r\n                  //initialValue={1}\r\n                  //resource=\"vouchers\"\r\n                  fullWidth\r\n                  formClassName={classes.width25}\r\n                  className={classes.BorderandBackground}\r\n                  // margin=\"none\"\r\n                />\r\n                <TextInput\r\n                  variant=\"outlined\"\r\n                  margin=\"none\"\r\n                  source=\"particulars\"\r\n                  //resource=\"vouchers\"\r\n                  label=\"Particulars\"\r\n                  multiline\r\n                  fullWidth\r\n                  formClassName={classes.width45}\r\n                  className={classes.BorderandBackground}\r\n                />\r\n                {/* <TextInput\r\n                  margin=\"none\"\r\n                  label=\"RefNo.\"\r\n                  source=\"refno\"\r\n                  //resource=\"vouchers\"\r\n                  fullWidth\r\n                  formClassName={classes.width20}\r\n                  className={classes.BorderandBackground}\r\n                /> */}\r\n\r\n                <NumberInput\r\n                  //formClassName={classes.iteratorinput50}\r\n                  //className={classes.fixedWidth}\r\n                  label=\"Debit\"\r\n                  source=\"dr\"\r\n                  // resource=\"vouchers\"\r\n                  //validate={ra_required}\r\n\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width12}\r\n                  fullWidth\r\n                />\r\n\r\n                <NumberInput\r\n                  //className={classes.fixedWidth}\r\n                  label=\"Credit\"\r\n                  source=\"cr\"\r\n                  //resource=\"vouchers\"\r\n                  //validate={ra_required}\r\n                  className={classes.BorderandBackground}\r\n                  formClassName={classes.width12}\r\n                  fullWidth\r\n                />\r\n              </SimpleFormIterator>\r\n            </ArrayInput>\r\n          </Box>\r\n          <Grid container display=\"flex\" fullWidth spacing={2}>\r\n            <Grid item xs=\"6\" align=\"left\">\r\n              <TextInput\r\n                margin=\"none\"\r\n                label=\"Remarks\"\r\n                source=\"remarks\"\r\n                //resource=\"vouchers\"\r\n                multiline\r\n                fullWidth\r\n                className={classes.BorderandBackground}\r\n              />\r\n            </Grid>\r\n            <Grid item xs=\"6\" align=\"right\">\r\n              <TotalInput\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                source=\"total_debit\"\r\n                field=\"dr\"\r\n              />\r\n              <TotalInput\r\n                variant=\"outlined\"\r\n                margin=\"none\"\r\n                source=\"total_credit\"\r\n                field=\"cr\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </SimpleForm>\r\n  );\r\n};\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\sales\\Sales.js",["387","388"],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\bookings\\BookingPrint.js",[],"C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\PrintVoucherComponent.js",["389"],"import React, { Component } from \"react\";\r\nimport logo from \"../../assets/infinitylogo.png\";\r\nimport Voucher from \"./VoucherPrint\";\r\nexport class PrintVoucherComponent extends Component {\r\n  render() {\r\n    const { record, loaded } = this.props;\r\n    const jwt = JSON.parse(localStorage.getItem(\"jwtToken\"));\r\n    if (record.id) {\r\n      console.log(logo);\r\n      return (\r\n        <div>\r\n          <Voucher\r\n            voucher={{ ...record }}\r\n            // invoice={{ \"createdDate\": \"25-5-2021\", \"dueDate\": \"23-2-9892\", \"paidDate\": \"25,1,2021\", \"paymentMethod\": \"CASH\", \"id\": \"1\", \"description\": \"this is description\", \"items\": [{ 'description': 'item1', 'amount': '25' }], \"name\": \"Firdous REsidecy\" }}\r\n            //customer={{}}\r\n            company={{\r\n              name: jwt.project.title,\r\n              logoUrl: logo,\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default PrintVoucherComponent;\r\n","C:\\Users\\aziz.rehman\\projects\\Firdous\\ledger\\frontend\\src\\app\\components\\accounts\\VoucherPrint.js",["390"],{"ruleId":"391","replacedBy":"392"},{"ruleId":"393","replacedBy":"394"},{"ruleId":"395","severity":1,"message":"396","line":12,"column":3,"nodeType":"397","messageId":"398","endLine":12,"endColumn":8},{"ruleId":"395","severity":1,"message":"399","line":60,"column":3,"nodeType":"397","messageId":"398","endLine":60,"endColumn":15},{"ruleId":"395","severity":1,"message":"400","line":308,"column":9,"nodeType":"397","messageId":"398","endLine":308,"endColumn":16},{"ruleId":"395","severity":1,"message":"401","line":317,"column":10,"nodeType":"397","messageId":"398","endLine":317,"endColumn":19},{"ruleId":"395","severity":1,"message":"402","line":364,"column":7,"nodeType":"397","messageId":"398","endLine":364,"endColumn":19},{"ruleId":"403","severity":1,"message":"404","line":10,"column":1,"nodeType":"405","endLine":24,"endColumn":3},{"ruleId":"395","severity":1,"message":"406","line":113,"column":9,"nodeType":"397","messageId":"398","endLine":113,"endColumn":16},{"ruleId":"395","severity":1,"message":"407","line":114,"column":9,"nodeType":"397","messageId":"398","endLine":114,"endColumn":17},{"ruleId":"395","severity":1,"message":"408","line":115,"column":9,"nodeType":"397","messageId":"398","endLine":115,"endColumn":18},{"ruleId":"395","severity":1,"message":"409","line":3,"column":10,"nodeType":"397","messageId":"398","endLine":3,"endColumn":15},{"ruleId":"410","severity":1,"message":"411","line":27,"column":20,"nodeType":"412","endLine":27,"endColumn":44},{"ruleId":"410","severity":1,"message":"413","line":51,"column":36,"nodeType":"412","endLine":51,"endColumn":53},{"ruleId":"395","severity":1,"message":"414","line":6,"column":8,"nodeType":"397","messageId":"398","endLine":6,"endColumn":31},{"ruleId":"403","severity":1,"message":"415","line":12,"column":1,"nodeType":"405","endLine":28,"endColumn":3},{"ruleId":"395","severity":1,"message":"416","line":59,"column":7,"nodeType":"397","messageId":"398","endLine":59,"endColumn":18},{"ruleId":"395","severity":1,"message":"417","line":275,"column":7,"nodeType":"397","messageId":"398","endLine":275,"endColumn":20},{"ruleId":"395","severity":1,"message":"418","line":285,"column":7,"nodeType":"397","messageId":"398","endLine":285,"endColumn":17},{"ruleId":"395","severity":1,"message":"416","line":53,"column":7,"nodeType":"397","messageId":"398","endLine":53,"endColumn":18},{"ruleId":"395","severity":1,"message":"417","line":265,"column":7,"nodeType":"397","messageId":"398","endLine":265,"endColumn":20},{"ruleId":"395","severity":1,"message":"418","line":275,"column":7,"nodeType":"397","messageId":"398","endLine":275,"endColumn":17},{"ruleId":"395","severity":1,"message":"419","line":3,"column":45,"nodeType":"397","messageId":"398","endLine":3,"endColumn":57},{"ruleId":"395","severity":1,"message":"420","line":4,"column":10,"nodeType":"397","messageId":"398","endLine":4,"endColumn":23},{"ruleId":"395","severity":1,"message":"421","line":5,"column":10,"nodeType":"397","messageId":"398","endLine":5,"endColumn":24},{"ruleId":"395","severity":1,"message":"422","line":5,"column":26,"nodeType":"397","messageId":"398","endLine":5,"endColumn":29},{"ruleId":"395","severity":1,"message":"423","line":6,"column":10,"nodeType":"397","messageId":"398","endLine":6,"endColumn":13},{"ruleId":"395","severity":1,"message":"424","line":8,"column":8,"nodeType":"397","messageId":"398","endLine":8,"endColumn":17},{"ruleId":"395","severity":1,"message":"425","line":9,"column":10,"nodeType":"397","messageId":"398","endLine":9,"endColumn":17},{"ruleId":"395","severity":1,"message":"426","line":10,"column":8,"nodeType":"397","messageId":"398","endLine":10,"endColumn":15},{"ruleId":"395","severity":1,"message":"427","line":18,"column":10,"nodeType":"397","messageId":"398","endLine":18,"endColumn":19},{"ruleId":"395","severity":1,"message":"428","line":18,"column":21,"nodeType":"397","messageId":"398","endLine":18,"endColumn":30},{"ruleId":"429","severity":1,"message":"430","line":68,"column":29,"nodeType":"431","messageId":"432","endLine":68,"endColumn":31},{"ruleId":"395","severity":1,"message":"433","line":76,"column":9,"nodeType":"397","messageId":"398","endLine":76,"endColumn":20},{"ruleId":"395","severity":1,"message":"434","line":1,"column":21,"nodeType":"397","messageId":"398","endLine":1,"endColumn":25},{"ruleId":"395","severity":1,"message":"435","line":21,"column":3,"nodeType":"397","messageId":"398","endLine":21,"endColumn":13},{"ruleId":"395","severity":1,"message":"436","line":21,"column":63,"nodeType":"397","messageId":"398","endLine":21,"endColumn":73},{"ruleId":"395","severity":1,"message":"437","line":24,"column":8,"nodeType":"397","messageId":"398","endLine":24,"endColumn":24},{"ruleId":"395","severity":1,"message":"400","line":93,"column":9,"nodeType":"397","messageId":"398","endLine":93,"endColumn":16},{"ruleId":"438","severity":1,"message":"439","line":141,"column":19,"nodeType":"440","endLine":141,"endColumn":41},{"ruleId":"438","severity":1,"message":"439","line":142,"column":21,"nodeType":"440","endLine":142,"endColumn":30},{"ruleId":"438","severity":1,"message":"439","line":436,"column":5,"nodeType":"440","endLine":436,"endColumn":14},{"ruleId":"438","severity":1,"message":"439","line":483,"column":5,"nodeType":"440","endLine":483,"endColumn":14},{"ruleId":"395","severity":1,"message":"441","line":4,"column":58,"nodeType":"397","messageId":"398","endLine":4,"endColumn":68},{"ruleId":"395","severity":1,"message":"442","line":98,"column":11,"nodeType":"397","messageId":"398","endLine":98,"endColumn":17},{"ruleId":"429","severity":1,"message":"430","line":141,"column":30,"nodeType":"431","messageId":"432","endLine":141,"endColumn":32},{"ruleId":"443","severity":1,"message":"444","line":46,"column":33,"nodeType":"445","messageId":"446","endLine":46,"endColumn":35},{"ruleId":"443","severity":1,"message":"447","line":49,"column":11,"nodeType":"448","messageId":"449","endLine":49,"endColumn":18},{"ruleId":"395","severity":1,"message":"450","line":5,"column":100,"nodeType":"397","messageId":"398","endLine":5,"endColumn":114},{"ruleId":"395","severity":1,"message":"451","line":5,"column":129,"nodeType":"397","messageId":"398","endLine":5,"endColumn":140},{"ruleId":"395","severity":1,"message":"406","line":204,"column":9,"nodeType":"397","messageId":"398","endLine":204,"endColumn":16},{"ruleId":"395","severity":1,"message":"407","line":205,"column":9,"nodeType":"397","messageId":"398","endLine":205,"endColumn":17},{"ruleId":"395","severity":1,"message":"408","line":206,"column":9,"nodeType":"397","messageId":"398","endLine":206,"endColumn":18},{"ruleId":"410","severity":1,"message":"452","line":109,"column":32,"nodeType":"412","endLine":109,"endColumn":62},{"ruleId":"395","severity":1,"message":"418","line":145,"column":7,"nodeType":"397","messageId":"398","endLine":145,"endColumn":17},{"ruleId":"395","severity":1,"message":"417","line":154,"column":7,"nodeType":"397","messageId":"398","endLine":154,"endColumn":20},{"ruleId":"410","severity":1,"message":"453","line":168,"column":33,"nodeType":"412","endLine":168,"endColumn":56},{"ruleId":"395","severity":1,"message":"454","line":302,"column":7,"nodeType":"397","messageId":"398","endLine":302,"endColumn":17},{"ruleId":"395","severity":1,"message":"455","line":311,"column":7,"nodeType":"397","messageId":"398","endLine":311,"endColumn":19},{"ruleId":"395","severity":1,"message":"456","line":25,"column":3,"nodeType":"397","messageId":"398","endLine":25,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":271,"column":64,"nodeType":"459","messageId":"460","endLine":271,"endColumn":66},{"ruleId":"457","severity":1,"message":"458","line":271,"column":87,"nodeType":"459","messageId":"460","endLine":271,"endColumn":89},{"ruleId":"443","severity":1,"message":"444","line":285,"column":39,"nodeType":"445","messageId":"446","endLine":285,"endColumn":41},{"ruleId":"395","severity":1,"message":"461","line":369,"column":7,"nodeType":"397","messageId":"398","endLine":369,"endColumn":15},{"ruleId":"395","severity":1,"message":"462","line":528,"column":7,"nodeType":"397","messageId":"398","endLine":528,"endColumn":32},{"ruleId":"395","severity":1,"message":"463","line":197,"column":22,"nodeType":"397","messageId":"398","endLine":197,"endColumn":30},{"ruleId":"395","severity":1,"message":"464","line":198,"column":9,"nodeType":"397","messageId":"398","endLine":198,"endColumn":14},{"ruleId":"395","severity":1,"message":"465","line":199,"column":9,"nodeType":"397","messageId":"398","endLine":199,"endColumn":14},{"ruleId":"443","severity":1,"message":"447","line":203,"column":16,"nodeType":"445","messageId":"466","endLine":203,"endColumn":18},{"ruleId":"443","severity":1,"message":"447","line":215,"column":16,"nodeType":"445","messageId":"466","endLine":215,"endColumn":18},{"ruleId":"395","severity":1,"message":"467","line":267,"column":5,"nodeType":"397","messageId":"398","endLine":267,"endColumn":27},{"ruleId":"395","severity":1,"message":"468","line":268,"column":5,"nodeType":"397","messageId":"398","endLine":268,"endColumn":27},{"ruleId":"395","severity":1,"message":"469","line":269,"column":5,"nodeType":"397","messageId":"398","endLine":269,"endColumn":27},{"ruleId":"395","severity":1,"message":"470","line":270,"column":5,"nodeType":"397","messageId":"398","endLine":270,"endColumn":27},{"ruleId":"395","severity":1,"message":"471","line":280,"column":9,"nodeType":"397","messageId":"398","endLine":280,"endColumn":16},{"ruleId":"395","severity":1,"message":"463","line":273,"column":22,"nodeType":"397","messageId":"398","endLine":273,"endColumn":30},{"ruleId":"443","severity":1,"message":"447","line":279,"column":16,"nodeType":"445","messageId":"466","endLine":279,"endColumn":18},{"ruleId":"443","severity":1,"message":"447","line":291,"column":16,"nodeType":"445","messageId":"466","endLine":291,"endColumn":18},{"ruleId":"395","severity":1,"message":"463","line":209,"column":22,"nodeType":"397","messageId":"398","endLine":209,"endColumn":30},{"ruleId":"395","severity":1,"message":"464","line":210,"column":9,"nodeType":"397","messageId":"398","endLine":210,"endColumn":14},{"ruleId":"395","severity":1,"message":"465","line":211,"column":9,"nodeType":"397","messageId":"398","endLine":211,"endColumn":14},{"ruleId":"443","severity":1,"message":"447","line":215,"column":16,"nodeType":"445","messageId":"466","endLine":215,"endColumn":18},{"ruleId":"443","severity":1,"message":"447","line":227,"column":16,"nodeType":"445","messageId":"466","endLine":227,"endColumn":18},{"ruleId":"395","severity":1,"message":"471","line":294,"column":9,"nodeType":"397","messageId":"398","endLine":294,"endColumn":16},{"ruleId":"395","severity":1,"message":"472","line":8,"column":7,"nodeType":"397","messageId":"398","endLine":8,"endColumn":16},{"ruleId":"395","severity":1,"message":"473","line":5,"column":22,"nodeType":"397","messageId":"398","endLine":5,"endColumn":28},{"ruleId":"395","severity":1,"message":"474","line":5,"column":48,"nodeType":"397","messageId":"398","endLine":5,"endColumn":57},{"ruleId":"395","severity":1,"message":"475","line":5,"column":99,"nodeType":"397","messageId":"398","endLine":5,"endColumn":115},{"ruleId":"395","severity":1,"message":"476","line":276,"column":7,"nodeType":"397","messageId":"398","endLine":276,"endColumn":10},{"ruleId":"477","severity":1,"message":"478","line":7,"column":9,"nodeType":"412","endLine":7,"endColumn":78},{"ruleId":"395","severity":1,"message":"479","line":149,"column":11,"nodeType":"397","messageId":"398","endLine":149,"endColumn":18},{"ruleId":"395","severity":1,"message":"480","line":149,"column":20,"nodeType":"397","messageId":"398","endLine":149,"endColumn":33},{"ruleId":"395","severity":1,"message":"481","line":7,"column":21,"nodeType":"397","messageId":"398","endLine":7,"endColumn":27},{"ruleId":"395","severity":1,"message":"482","line":1,"column":10,"nodeType":"397","messageId":"398","endLine":1,"endColumn":14},{"ruleId":"395","severity":1,"message":"463","line":11,"column":9,"nodeType":"397","messageId":"398","endLine":11,"endColumn":17},{"ruleId":"395","severity":1,"message":"483","line":12,"column":9,"nodeType":"397","messageId":"398","endLine":12,"endColumn":21},{"ruleId":"395","severity":1,"message":"479","line":14,"column":9,"nodeType":"397","messageId":"398","endLine":14,"endColumn":16},{"ruleId":"395","severity":1,"message":"484","line":16,"column":9,"nodeType":"397","messageId":"398","endLine":16,"endColumn":17},{"ruleId":"395","severity":1,"message":"485","line":17,"column":9,"nodeType":"397","messageId":"398","endLine":17,"endColumn":16},{"ruleId":"395","severity":1,"message":"481","line":69,"column":23,"nodeType":"397","messageId":"398","endLine":69,"endColumn":29},{"ruleId":"395","severity":1,"message":"423","line":1,"column":10,"nodeType":"397","messageId":"398","endLine":1,"endColumn":13},{"ruleId":"395","severity":1,"message":"486","line":1,"column":21,"nodeType":"397","messageId":"398","endLine":1,"endColumn":31},{"ruleId":"395","severity":1,"message":"487","line":3,"column":10,"nodeType":"397","messageId":"398","endLine":3,"endColumn":20},{"ruleId":"395","severity":1,"message":"473","line":3,"column":22,"nodeType":"397","messageId":"398","endLine":3,"endColumn":28},{"ruleId":"395","severity":1,"message":"474","line":3,"column":30,"nodeType":"397","messageId":"398","endLine":3,"endColumn":39},{"ruleId":"395","severity":1,"message":"488","line":3,"column":41,"nodeType":"397","messageId":"398","endLine":3,"endColumn":54},{"ruleId":"395","severity":1,"message":"489","line":3,"column":56,"nodeType":"397","messageId":"398","endLine":3,"endColumn":67},{"ruleId":"395","severity":1,"message":"490","line":3,"column":79,"nodeType":"397","messageId":"398","endLine":3,"endColumn":89},{"ruleId":"395","severity":1,"message":"491","line":3,"column":91,"nodeType":"397","messageId":"398","endLine":3,"endColumn":109},{"ruleId":"395","severity":1,"message":"492","line":3,"column":122,"nodeType":"397","messageId":"398","endLine":3,"endColumn":129},{"ruleId":"395","severity":1,"message":"493","line":4,"column":8,"nodeType":"397","messageId":"398","endLine":4,"endColumn":21},{"ruleId":"395","severity":1,"message":"494","line":19,"column":13,"nodeType":"397","messageId":"398","endLine":19,"endColumn":21},{"ruleId":"395","severity":1,"message":"495","line":19,"column":29,"nodeType":"397","messageId":"398","endLine":19,"endColumn":41},{"ruleId":"395","severity":1,"message":"496","line":20,"column":11,"nodeType":"397","messageId":"398","endLine":20,"endColumn":16},{"ruleId":"395","severity":1,"message":"497","line":21,"column":11,"nodeType":"397","messageId":"398","endLine":21,"endColumn":17},{"ruleId":"395","severity":1,"message":"498","line":22,"column":11,"nodeType":"397","messageId":"398","endLine":22,"endColumn":17},{"ruleId":"395","severity":1,"message":"499","line":43,"column":11,"nodeType":"397","messageId":"398","endLine":43,"endColumn":22},{"ruleId":"429","severity":1,"message":"430","line":44,"column":14,"nodeType":"431","messageId":"432","endLine":44,"endColumn":16},{"ruleId":"395","severity":1,"message":"500","line":45,"column":13,"nodeType":"397","messageId":"398","endLine":45,"endColumn":20},{"ruleId":"395","severity":1,"message":"399","line":7,"column":10,"nodeType":"397","messageId":"398","endLine":7,"endColumn":22},{"ruleId":"395","severity":1,"message":"501","line":11,"column":32,"nodeType":"397","messageId":"398","endLine":11,"endColumn":36},{"ruleId":"429","severity":1,"message":"430","line":48,"column":14,"nodeType":"431","messageId":"432","endLine":48,"endColumn":16},{"ruleId":"395","severity":1,"message":"492","line":3,"column":64,"nodeType":"397","messageId":"398","endLine":3,"endColumn":71},{"ruleId":"395","severity":1,"message":"442","line":17,"column":11,"nodeType":"397","messageId":"398","endLine":17,"endColumn":17},{"ruleId":"429","severity":1,"message":"430","line":24,"column":14,"nodeType":"431","messageId":"432","endLine":24,"endColumn":16},{"ruleId":"438","severity":1,"message":"439","line":72,"column":19,"nodeType":"440","endLine":72,"endColumn":41},{"ruleId":"438","severity":1,"message":"439","line":73,"column":21,"nodeType":"440","endLine":73,"endColumn":30},{"ruleId":"395","severity":1,"message":"463","line":7,"column":5,"nodeType":"397","messageId":"398","endLine":7,"endColumn":13},{"ruleId":"395","severity":1,"message":"483","line":8,"column":5,"nodeType":"397","messageId":"398","endLine":8,"endColumn":17},{"ruleId":"395","severity":1,"message":"479","line":10,"column":5,"nodeType":"397","messageId":"398","endLine":10,"endColumn":12},{"ruleId":"395","severity":1,"message":"484","line":12,"column":5,"nodeType":"397","messageId":"398","endLine":12,"endColumn":13},{"ruleId":"395","severity":1,"message":"485","line":13,"column":5,"nodeType":"397","messageId":"398","endLine":13,"endColumn":12},{"ruleId":"395","severity":1,"message":"479","line":91,"column":11,"nodeType":"397","messageId":"398","endLine":91,"endColumn":18},{"ruleId":"395","severity":1,"message":"480","line":91,"column":20,"nodeType":"397","messageId":"398","endLine":91,"endColumn":33},{"ruleId":"429","severity":1,"message":"430","line":95,"column":23,"nodeType":"431","messageId":"432","endLine":95,"endColumn":25},{"ruleId":"429","severity":1,"message":"430","line":99,"column":58,"nodeType":"431","messageId":"432","endLine":99,"endColumn":60},{"ruleId":"443","severity":1,"message":"447","line":102,"column":43,"nodeType":"445","messageId":"466","endLine":102,"endColumn":45},{"ruleId":"395","severity":1,"message":"417","line":118,"column":7,"nodeType":"397","messageId":"398","endLine":118,"endColumn":20},{"ruleId":"395","severity":1,"message":"418","line":128,"column":7,"nodeType":"397","messageId":"398","endLine":128,"endColumn":17},{"ruleId":"395","severity":1,"message":"502","line":70,"column":9,"nodeType":"397","messageId":"398","endLine":70,"endColumn":21},{"ruleId":"443","severity":1,"message":"444","line":120,"column":39,"nodeType":"445","messageId":"446","endLine":120,"endColumn":41},{"ruleId":"395","severity":1,"message":"479","line":90,"column":11,"nodeType":"397","messageId":"398","endLine":90,"endColumn":18},{"ruleId":"395","severity":1,"message":"480","line":90,"column":20,"nodeType":"397","messageId":"398","endLine":90,"endColumn":33},{"ruleId":"429","severity":1,"message":"503","line":104,"column":36,"nodeType":"431","messageId":"432","endLine":104,"endColumn":38},{"ruleId":"429","severity":1,"message":"503","line":109,"column":38,"nodeType":"431","messageId":"432","endLine":109,"endColumn":40},{"ruleId":"429","severity":1,"message":"503","line":122,"column":20,"nodeType":"431","messageId":"432","endLine":122,"endColumn":22},{"ruleId":"443","severity":1,"message":"447","line":134,"column":43,"nodeType":"445","messageId":"466","endLine":134,"endColumn":45},{"ruleId":"395","severity":1,"message":"479","line":90,"column":11,"nodeType":"397","messageId":"398","endLine":90,"endColumn":18},{"ruleId":"395","severity":1,"message":"480","line":90,"column":20,"nodeType":"397","messageId":"398","endLine":90,"endColumn":33},{"ruleId":"395","severity":1,"message":"481","line":6,"column":21,"nodeType":"397","messageId":"398","endLine":6,"endColumn":27},{"ruleId":"429","severity":1,"message":"430","line":203,"column":44,"nodeType":"431","messageId":"432","endLine":203,"endColumn":46},"no-native-reassign",["504"],"no-negated-in-lhs",["505"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'BookingsShow' is defined but never used.","'classes' is assigned a value but never used.","'Copyright' is defined but never used.","'i18nProvider' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'refresh' is assigned a value but never used.","'redirect' is assigned a value but never used.","'onFailure' is assigned a value but never used.","'Label' is defined but never used.","react/jsx-pascal-case","Imported JSX component Coa_typeSearchFilter must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Coa_typeTitle must be in PascalCase or SCREAMING_SNAKE_CASE","'AccountBalancePrintable' is defined but never used.","Assign array to a variable before exporting as module default","'QuickFilter' is assigned a value but never used.","'dateFormatter' is assigned a value but never used.","'dateParser' is assigned a value but never used.","'defaultTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'Car' is defined but never used.","'Box' is defined but never used.","'PropTypes' is defined but never used.","'connect' is defined but never used.","'compose' is defined but never used.","'translate' is defined but never used.","'userLogin' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'renderInput' is assigned a value but never used.","'Link' is defined but never used.","'TopToolbar' is defined but never used.","'ShowButton' is defined but never used.","'PrintPOComponent' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'ListButton' is defined but never used.","'styles' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'ReferenceInput' is defined but never used.","'SelectInput' is defined but never used.","Imported JSX component Purchase_orderSearchFilter must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Purchase_orderTitle must be in PascalCase or SCREAMING_SNAKE_CASE","'toCurrency' is assigned a value but never used.","'fromCurrency' is assigned a value but never used.","'EditButton' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'PostList' is assigned a value but never used.","'ProjectLedgerDetailButton' is assigned a value but never used.","'basePath' is assigned a value but never used.","'types' is assigned a value but never used.","'heads' is assigned a value but never used.","expectedInside","'grand_total_opening_dr' is assigned a value but never used.","'grand_total_opening_cr' is assigned a value but never used.","'grand_total_current_dr' is assigned a value but never used.","'grand_total_current_cr' is assigned a value but never used.","'records' is assigned a value but never used.","'useStyles' is assigned a value but never used.","'Button' is defined but never used.","'DateInput' is defined but never used.","'FormDataConsumer' is defined but never used.","'jwt' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'loading' is assigned a value but never used.","'authenticated' is assigned a value but never used.","'loaded' is assigned a value but never used.","'Grid' is defined but never used.","'defaultTitle' is assigned a value but never used.","'resource' is assigned a value but never used.","'version' is assigned a value but never used.","'Typography' is defined but never used.","'ArrayInput' is defined but never used.","'DateTimeInput' is defined but never used.","'NumberInput' is defined but never used.","'SaveButton' is defined but never used.","'SimpleFormIterator' is defined but never used.","'Toolbar' is defined but never used.","'FirdousSelect' is defined but never used.","'schedule' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'small' is assigned a value but never used.","'xsmall' is assigned a value but never used.","'medium' is assigned a value but never used.","'ra_required' is assigned a value but never used.","'FormDiv' is assigned a value but never used.","'step' is assigned a value but never used.","'componentRef' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]